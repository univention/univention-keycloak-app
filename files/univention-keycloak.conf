@%@UCRWARNING=# @%@

@!@
sso_fqdn = configRegistry.get('keycloak/server/sso/fqdn', 'ucs-sso-ng.%s' % configRegistry.get('domainname'))
ssofqdn = {'ssofqdn': sso_fqdn}
import os.path

# check if we need to create a keycloak apache config
if configRegistry.is_true('keycloak/apache/config', True):

    fqdn = '%s.%s' % (configRegistry.get('hostname'), configRegistry.get('domainname'))
    kc_fqdn = configRegistry.get('keycloak/server/sso/fqdn')
    sso_path = configRegistry.get('keycloak/server/sso/path', '/').rstrip('/')

    proxy_config = f'''
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"
    ProxyPass {sso_path}/ http://127.0.0.1:8180{sso_path}/
    ProxyPassReverse {sso_path}/ http://127.0.0.1:8180{sso_path}/
    '''

    ssofqdn.update(dict(
        fqdn=fqdn,
        kc_fqdn=kc_fqdn,
        sso_path=sso_path,
        ssl_certificate=configRegistry.get('keycloak/apache2/ssl/certificate', '/etc/univention/ssl/%(ssofqdn)s/cert.pem' % ssofqdn),
        ssl_certificate_key=configRegistry.get('keycloak/apache2/ssl/key', '/etc/univention/ssl/%(ssofqdn)s/private.key' % ssofqdn),
        ssl_ca_certificate=configRegistry.get('keycloak/apache2/ssl/ca', '/etc/univention/ssl/ucsCA/CAcert.pem'),
        custom_CSP=configRegistry.get('keycloak/csp/frame-ancestors',''),
        cookies_samesite=configRegistry.get('keycloak/cookies/samesite','None'),
        domain=configRegistry.get('domainname'),
        proxy_config=proxy_config
    ))
    print('''
<If "%%{HTTP_HOST} == '%(kc_fqdn)s' &&  %%{REQUEST_URI} =~ m#^%(sso_path)s/.*#  && %%{HTTPS} == \'on\'">
	Header edit Content-Security-Policy " *frame-ancestors [^;]*;" " frame-ancestors \'self\' https://*.%(domain)s %(custom_CSP)s; "
	Header edit Set-Cookie ^(.*)$ \$1;Secure;SameSite=%(cookies_samesite)s
</If>
''' % ssofqdn)
    # non-virtual host config
    if not configRegistry.is_true('keycloak/server/sso/virtualhost', True):
        print('''
RewriteCond %%{HTTPS} off
RewriteRule ^%(sso_path)s/$ https://%%{HTTP_HOST}%%{REQUEST_URI} [L,R=301]



<IfModule mod_ssl.c>
    %(proxy_config)s
</IfModule>
IncludeOptional /var/lib/univention-appcenter/apps/keycloak/data/local-univention-keycloak.conf
''' % ssofqdn)
    # virtual host config
    else:
        print('''

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName %(ssofqdn)s

    SSLEngine on
    SSLProxyEngine on
    SSLCertificateFile %(ssl_certificate)s
    SSLCertificateKeyFile %(ssl_certificate_key)s
    SSLCACertificateFile %(ssl_ca_certificate)s

    %(proxy_config)s

    RewriteEngine on
    RewriteCond %%{HTTP_HOST} ^%(ssofqdn)s$
    RewriteCond %%{REQUEST_URI} ^/univention/(login|management|self-service|portal|server-overview)/$
    RewriteRule ^/univention/(.*)$ %%{REQUEST_SCHEME}://%(fqdn)s/univention/\$1 [L,QSA,R=301,END]
    IncludeOptional /var/lib/univention-appcenter/apps/keycloak/data/local-univention-keycloak.conf
</VirtualHost>
<VirtualHost *:80>
   ServerName %(ssofqdn)s
   Redirect permanent / https://%(ssofqdn)s/
</VirtualHost>
</IfModule>
''' % ssofqdn)
@!@
