#!/bin/bash

# shellcheck source=/dev/null
[ -e /usr/share/univention-lib/ucr.sh ] && . /usr/share/univention-lib/ucr.sh

action=$1


apache_config () {
	# create apache config
	mkdir -p  /var/lib/univention-appcenter/apps/keycloak/config/
	cat <<%EOF > /var/lib/univention-appcenter/apps/keycloak/config/vhost.conf
ProxyPreserveHost On
SSLProxyEngine On
SSLProxyCheckPeerCN on
SSLProxyCheckPeerExpire on
RequestHeader set X-Forwarded-Proto "https"
RequestHeader set X-Forwarded-Port "443"
ProxyPass / http://127.0.0.1:8180/
ProxyPassReverse / http://127.0.0.1:8180/
%EOF
}

theme_config() {
	THEME_DIR="/usr/share/univention-web/themes"
	THEME_SRC="$THEME_DIR/$(basename "$(ucr get keycloak/theme)").css"
	THEME_DST="/var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/resources/css/theme.css"
	if [ ! -e "$THEME_SRC" ]; then
		echo "$THEME_SRC does not exist"
		exit 1
	fi

	[ -e "$THEME_DST" ] && rm "$THEME_DST"
	cp "$THEME_SRC" "$THEME_DST"
}

if [ -n "$action" ] && [ "$action" = "remove" ]; then
	exit 0
fi

apache_config
theme_config

chmod 640 "/etc/postgresql-keycloak.secret"
chgrp "DC Backup Hosts" "/etc/postgresql-keycloak.secret"
chgrp "DC Backup Hosts" "/etc/keycloak.secret"

#if is_ucr_true keycloak/ucs/setup; then
#	setup_ucs
#fi
### TODO: Change to detect installation + password from Nikola's jdbc uri
. /usr/share/univention-lib/all.sh

data="$(python3 <<-%EOF
import json
from string import Template
from urllib.parse import urlparse

from univention.config_registry import ConfigRegistry
from univention.udm import UDM
from univention.udm.binary_props import Base64Bzip2BinaryProperty
from univention.udm.exceptions import NoObject

ucr = ConfigRegistry().load()
fqdn = f'{ucr.get("hostname")}.{ucr.get("domainname")}'
ldap_base = ucr.get('ldap/base')
superordinate = f'cn=univention,{ldap_base}'
name = 'keycloak'
mod = UDM.admin().version(2).get('settings/data')

uri = ucr.get('keycloak/database/uri')
if not uri:
    try:
        # URL not found in UCR, try in LDAP first
        obj = mod.get(f'cn={name},cn=data,{superordinate}')

        data = json.loads(obj.props.data.raw)
        uri = data['uri']
        data['installations'].append(fqdn)
        data['installations'] = list(set(data['installations']))
    except NoObject:
        # URL not found in UCR or LDAP - use current host configuration
        obj = mod.new(superordinate)
        obj.position = f'cn=data,{superordinate}'
        obj.props.name = name
        obj.props.data_type = 'string'

        with open('/etc/postgresql-keycloak.secret', 'r') as fd:
            password = fd.read().strip()

        uri = f'postgresql://keycloak:{password}@{fqdn}:5432/keycloak'
        data = {
            'uri': uri,
            'installations': [fqdn],
        }

    raw_value = json.dumps(data).encode('ascii')
    obj.props.data = Base64Bzip2BinaryProperty('data', raw_value=raw_value)
    obj.save()

cfg = urlparse(uri)
print(cfg.hostname)
print(cfg.password)
%EOF
)" || die

if [ "$action" = "settings" ]; then
	univention-app reinitialize keycloak
fi

# extract KC host (1st line in STDOUT) and DB password (2nd line in STDOUT) from the above python script
opts=( $(echo -e "$data" | awk -F'\n'  '{print $1, $2}') );
keycloak_db_host_address="${opts[0]}"
keycloak_db_password="${opts[1]}"

cp /var/lib/univention-appcenter/apps/keycloak/conf/keycloak_template.conf /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
sed -i "s/db-password=password/db-password=$keycloak_db_password/g" /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
sed -i "s/db-url=jdbc:postgresql:\/\/localhost\/keycloak/db-url=jdbc:postgresql:\/\/$keycloak_db_host_address\/keycloak/g" /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
docker cp /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf keycloak:/opt/keycloak/conf/keycloak.conf

cp /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping-template.xml /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
sed -i "s/\${env.LOCAL_DB_PASSWORD}/$keycloak_db_password/g" /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
sed -i "s/\${env.LOCAL_DB_URL_HOST}/$keycloak_db_host_address/g" /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
docker cp /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml keycloak:/opt/keycloak/conf/cache-ispn-jdbc-ping.xml

univention-app shell keycloak ../bin/kc.sh build --db=postgres
univention-app restart keycloak

i=0; while [ "$(docker inspect -f "{{.State.Health.Status}}" "keycloak")" != "healthy" ] && [ "$((++i))" -lt 100 ]; do  sleep 2; done; if [ "$i" -eq 100 ]; then echo "ERROR: Container did not come up healthy"; exit 1; fi
echo "Container is healty, configuring Keycloak"

univention-keycloak init || die
