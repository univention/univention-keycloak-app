#!/bin/bash

set -e
eval "$(ucr shell)"
. /usr/share/univention-lib/ucr.sh

while [ $# -gt 0 ]; do
	case "$1" in
		"--error-file")
			shift
			errorfile="$1"
			shift
			;;
		"--old-version")
			shift
			old_version="$1"
			shift
			;;
		"--version")
			shift
			version="$1"
			shift
			;;
		*)
			shift
			;;
	esac
done


if ! is_ucr_false keycloak/check-postgres-version; then

	# check for postgres >= 12 since Keycloak 26
	if [ -n "$old_version" ]; then

		if dpkg --compare-versions "$old_version" lt 26.1.4-ucs1; then

			# upgrade path: a database configuration should already exist
			postgres="$(python3 -c '
import sys
import json

from univention.udm import UDM

udm = UDM.machine().version(2)

keycloak_data_objs = list(udm.get("settings/data").search("cn=keycloak"))
if keycloak_data_objs:
    keycloak_data_obj = keycloak_data_objs[0]
else:
    sys.exit(0)

data = json.loads(keycloak_data_obj.props.data.raw)

# just check postgres
if not data.get("driver", "") == "org.postgresql.Driver":
    sys.exit(0)

username = data["username"]
password = data["password"]
uri_parts = data["uri"].split("postgresql://")

if uri_parts:
    uri = uri_parts[1]
else:
    sys.exit(0)

import psycopg2
db_connection_string = "postgresql://%s:%s@%s" % (username, password, uri)
conn = psycopg2.connect(db_connection_string)


print(str(conn.server_version)[:-4])
')"
			if [ -n "$postgres" ] && [ "$postgres" -lt 12 ]; then
				echo "It seems you are using Postgres $postgres as the database management system for Keycloak." >> "$errorfile"
				echo "Starting with Keycloak 26, at least Postgres 12 is required." >> "$errorfile"
				echo "Please update Postgres. You may want to follow this article: <a href=""https://help.univention.com/t/updating-from-postgresql-11-to-postgresql-15/22162 target="_blank">https://help.univention.com/t/updating-from-postgresql-11-to-postgresql-15/22162</a>" >> "$errorfile"
				echo 'You can skip this test with by setting ucr variable "keycloak/check-postgres-version" to "false".' >>"$errorfile"
				echo "But be aware that Keycloak 26 will not work with PostgreSQL 11." >> "$errorfile"
				exit 1
			fi
		fi
	# else: no keycloak data or no postgresql:// in database uri. second case is cleary ok, first case should not happen, but handling it is out of scope of this check
	else
		# new installation. getting database information is more a heuristic as we do not have access to App Settings
		# we _assume_ that the Keycloak installation would be configured against a local Postgres...
		set +e
		dpkg-query -W -f '${Status}' postgresql-11 | grep -q ^install
		p11="$?"
		dpkg-query -W -f '${Status}' postgresql-15 | grep -q ^install
		p15="$?"
		set -e
		if [ "$p11" = "0" ] && [ "$p15" = "1" ]; then
			echo "We cannot reliably determine the database management system you will be using. But it may be that you would be using Postgres 11." >> "$errorfile"
			echo "Starting with Keycloak 26, at least Postgres 12 is required." >> "$errorfile"
			echo "Please update Postgres. You may want to follow this article: <a href=""https://help.univention.com/t/updating-from-postgresql-11-to-postgresql-15/22162 target="_blank">https://help.univention.com/t/updating-from-postgresql-11-to-postgresql-15/22162</a>" >> "$errorfile"
			echo 'You can skip this test with by setting ucr variable "keycloak/check-postgres-version" to "false".' >>"$errorfile"
			echo "But be aware that Keycloak 26 will not work with PostgreSQL 11." >> "$errorfile"
			exit 1
		fi
	fi
fi


# create password
pwdfile="/etc/keycloak.secret"
[ -e "$pwdfile" ] || makepasswd --chars 20 > "$pwdfile"
chmod 640 "$pwdfile"

default_sso_fqdn="ucs-sso-ng.$(ucr get domainname)"
ussl_path="/etc/univention/ssl"
[[ "$default_sso_fqdn" != ${default_sso_fqdn,,} ]] && ln -s "$ussl_path/$default_sso_fqdn" "$ussl_path/${default_sso_fqdn,,}" || true

# apache template
keycloak_template_path=/etc/univention/templates/files/etc/apache2/sites-available/univention-keycloak.conf
echo "Installing univention-keycloak apache template"
	cat <<%EOF >"$keycloak_template_path"
%KEYCLOAK-TEMPLATE-APACHE%
%EOF
chmod 644 "$keycloak_template_path"

# keycloak settings/data acl
mkdir -p /var/lib/univention-appcenter/apps/keycloak/conf/
keycloak_acl_path=/var/lib/univention-appcenter/apps/keycloak/conf/67keycloak.acl
echo "Installing Keycloak data/settings acl"
	cat <<%EOF >"$keycloak_acl_path"
%KEYCLOAK-ACL%
%EOF
chmod 644 "$keycloak_acl_path"

# apache template info
keycloak_info_path=/etc/univention/templates/info/univention-keycloak.info
echo "Installing Keycloak apache template info"
	cat <<%EOF >"$keycloak_info_path"
%KEYCLOAK-INFO-APACHE%
%EOF
chmod 644 "$keycloak_info_path"

# translation template info
keycloak_translation_info_path_de=/etc/univention/templates/info/messages_de.properties.info
keycloak_translation_info_path_en=/etc/univention/templates/info/messages_en.properties.info
echo "Installing Keycloak translation template info"
	cat <<%EOF >"$keycloak_translation_info_path_de"
%KEYCLOAK-LOGIN-TRANSLATION-INFO-DE%
%EOF
	cat <<%EOF >"$keycloak_translation_info_path_en"
%KEYCLOAK-LOGIN-TRANSLATION-INFO-EN%
%EOF
chmod 644 "$keycloak_translation_info_path_de"
chmod 644 "$keycloak_translation_info_path_en"

#translation template
keycloak_translation_login_path_de=/etc/univention/templates/files/var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/messages/messages_de.properties
keycloak_translation_login_path_en=/etc/univention/templates/files/var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/messages/messages_en.properties
mkdir -p /etc/univention/templates/files/var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/messages/
echo "Installing Keycloak transaltion template"
	cat <<%EOF >"$keycloak_translation_login_path_de"
%KEYCLOAK-LOGIN-TRANSLATION-DE%
%EOF
	cat <<%EOF >"$keycloak_translation_login_path_en"
%KEYCLOAK-LOGIN-TRANSLATION-EN%
%EOF
chmod 644 "$keycloak_translation_login_path_de"
chmod 644 "$keycloak_translation_login_path_en"
ucr commit /var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/messages/messages_de.properties
ucr commit /var/lib/univention-appcenter/apps/keycloak/conf/UCS/login/messages/messages_en.properties

# postgresql 11 template
postgresql_keycloak_template_path=/etc/univention/templates/files/etc/postgresql/11/main/pg_hba.conf.d/50-keycloak.conf
mkdir -p "$(dirname "$postgresql_keycloak_template_path")"
echo "Installing 50-keycloak postgresql 11 template"
	cat <<%EOF >"$postgresql_keycloak_template_path"
%POSTGRESQL-KEYCLOAK-TEMPLATE%
%EOF
chmod 644 "$postgresql_keycloak_template_path"

# postgresql 15 template
postgresql_keycloak_template_path=/etc/univention/templates/files/etc/postgresql/15/main/pg_hba.conf.d/50-keycloak.conf
mkdir -p "$(dirname "$postgresql_keycloak_template_path")"
echo "Installing 50-keycloak postgresql 15 template"
	cat <<%EOF >"$postgresql_keycloak_template_path"
%POSTGRESQL-KEYCLOAK-TEMPLATE%
%EOF
chmod 644 "$postgresql_keycloak_template_path"

# postgresql template info
pg_keycloak_info_path=/etc/univention/templates/info/50-keycloak.info
echo "Installing 50-keycloak postgresql template info"
	cat <<%EOF >"$pg_keycloak_info_path"
%POSTGRESQL-KEYCLOAK-INFO%
%EOF
chmod 644 "$pg_keycloak_info_path"

# keycloak ispn configuration template
keycloak_template_ispn_conf_path=/var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping-template.xml
echo "Installing keycloak ispn configuration template"
base64 -d <<%EOF >"$keycloak_template_ispn_conf_path"
%KEYCLOAK-ISPN-TEMPLATE-CONF%
%EOF
chmod 644 "$keycloak_template_ispn_conf_path"

exit 0
