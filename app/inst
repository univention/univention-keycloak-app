#!/bin/bash
#
# App join script
#
# Copyright 2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION="4"

. /usr/share/univention-join/joinscripthelper.lib
. /usr/share/univention-lib/all.sh
. /usr/share/univention-ssl/make-certificates.sh

joinscript_init

app_id="keycloak"

ucs_addServiceToLocalhost "$app_id" "$@"

domainname="$(ucr get domainname)"
hostname="$(ucr get hostname)"
ldap_base="$(ucr get ldap/base)"
sso_url="$(ucr get keycloak/server/sso/fqdn)"


COMPONENT_ID=$(univention-app get $app_id component_id | cut -f 2 -d ':' | tr -d '[:space:]')
ucr set \
	ucs/web/overview/entries/admin/$app_id/description/de="Keycloak" \
	ucs/web/overview/entries/admin/$app_id/description="Keycloak" \
	ucs/web/overview/entries/admin/$app_id/label="Keycloak" \
	ucs/web/overview/entries/admin/$app_id/link="https://$sso_url/admin/" \
	ucs/web/overview/entries/admin/$app_id/icon="/univention/js/dijit/themes/umc/icons/scalable/apps-$COMPONENT_ID.svg" \
	ucs/web/overview/entries/admin/$app_id/link-target='newwindow'

## Only make the portal tile for the Keycloak App visible once a Domain Admin is logged in on the portal
domain_admins_dn=$(univention-ldapsearch -LLL "(&(cn=Domain Admins)(objectClass=univentionGroup))" 1.1 | ldapsearch-decode64 | sed -n 's/^dn: //p')
udm portals/entry modify "$@" \
	--dn "cn=keycloak,cn=entry,cn=portals,cn=univention,$ldap_base" \
	--append allowedGroups="$domain_admins_dn" || die


## TODO: Integrate jdbc uri registration here
keycloak_db_host_dn=$(univention-ldapsearch -LLL univentionService="Keycloak DB" dn | sed -ne "s/^dn: //p")
if [ -z "$keycloak_db_host_dn" ]; then
	ucs_addServiceToLocalhost "Keycloak DB" "$@"
	keycloak_db_host_address="172.17.42.1"
	ucr set keycloak/server/sso/certificate/generation='true'
	ucr set keycloak/server/sso/certificate/download='false'
else
	keycloak_db_host_address=$(ucs_getAttrOfDN "aRecord" "$keycloak_db_host_dn")
	ucr set keycloak/server/sso/certificate/generation='false'
	ucr set keycloak/server/sso/certificate/download='true'
fi


eval "$(ucr shell)"

## as variables were changed we need the new ones
psql_pwd_path="/etc/postgresql-keycloak.secret"
remote_psql_pwd_path="/etc/remote-postgresql-keycloak.secret"
machine_secret="/etc/machine.secret"
remote_admin_pwd=""


# check if we need to create a new certificate
if [ "$server_role" = "domaincontroller_master" ]; then
	if [ -z "$keycloak_server_sso_certificate_generation" ] || is_ucr_true keycloak/server/sso/certificate/generation; then
		univention-certificate new -name "${keycloak_server_sso_fqdn}" -days "${ssl_default_days:-1825}" || die
		create_or_download=true
		ucr set keycloak/server/sso/certificate/generation='false'
		keycloak_db_password="$(cat $psql_pwd_path)"
	elif [ -z "$keycloak_server_sso_certificate_download" ] || is_ucr_true keycloak/server/sso/certificate/download; then
		ucs_parseCredentials "$@"
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:/etc/univention/ssl/${keycloak_server_sso_fqdn}/ /etc/univention/ssl/" || die
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:/etc/keycloak.secret /etc/remote-keycloak.secret" || die
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:$psql_pwd_path $remote_psql_pwd_path" || die
		chgrp -R "DC Backup Hosts" "/etc/univention/ssl/$keycloak_server_sso_fqdn/"
		keycloak_db_password="$(cat $remote_psql_pwd_path)"
		remote_admin_pwd="/etc/remote-keycloak.secret"
		create_or_download=true
		ucr set keycloak/server/sso/certificate/generation='false'
	fi
else
	if [ -z "$keycloak_server_sso_certificate_generation" ] || is_ucr_true keycloak/server/sso/certificate/generation; then
		ucs_parseCredentials "$@"
		HOSTACCOUNT="$(ucs_convertDN2UID "$binddn")" # getting uid
#		NAMETMP=${binddn:4} # Remove uid=
#		HOSTACCOUNT=${NAMETMP%%,cn=*} # remove from first ",cn=" to end
#		univention-ssh $bindpwdfile "$HOSTACCOUNT@$ldap_master "/usr/share/univention-ssl/make-certificates.sh; univention-certificate new -name "${keycloak_server_sso_fqdn}" -days "${ssl_default_days:-1825}"" || die
#		DOWNLOAD CERT TO THIS HOST
#		univention-scp $machine_secret "-r $hostname\$@$ldap_master:/etc/univention/ssl/${keycloak_server_sso_fqdn}/ /etc/univention/ssl/" || die
		gencert "/etc/univention/ssl/$keycloak_server_sso_fqdn" "${keycloak_server_sso_fqdn}" "${ssl_default_days:-1825}" || die
		chgrp -R "DC Backup Hosts" "/etc/univention/ssl/$keycloak_server_sso_fqdn/"
		chmod -R 640 "/etc/univention/ssl/$keycloak_server_sso_fqdn/"
		chmod 750 "/etc/univention/ssl/$keycloak_server_sso_fqdn/"
		create_or_download=true
		ucr set keycloak/server/sso/certificate/generation='false'
		keycloak_db_password="$(cat $psql_pwd_path)"
	elif [ -z "$keycloak_server_sso_certificate_download" ] || is_ucr_true keycloak/server/sso/certificate/download; then
		ucs_parseCredentials "$@"
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:/etc/univention/ssl/${keycloak_server_sso_fqdn}/ /etc/univention/ssl/" || die
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:/etc/keycloak.secret /etc/remote-keycloak.secret" || die
		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:$psql_pwd_path $remote_psql_pwd_path" || die
		chgrp -R "DC Backup Hosts" "/etc/univention/ssl/$keycloak_server_sso_fqdn/"
		keycloak_db_password="$(cat $remote_psql_pwd_path)"
		remote_admin_pwd="/etc/remote-keycloak.secret"
		create_or_download=true
		ucr set keycloak/server/sso/certificate/generation='false'
	fi
fi

## TODO: Change everything on top for this (after cert errata), rename app setting
#if [ -z "$keycloak_server_sso_certificate_download" ] || is_ucr_true keycloak/server/sso/certificate/download; then
#		ucs_parseCredentials "$@"
## TODO: Keycloak secret shouldn't be neeed
##		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:/etc/keycloak.secret /etc/remote-keycloak.secret" || die
## TODO: DB secret is on the ldap stored db uri. No need to cp the secret
##		univention-scp $machine_secret "-r $hostname\$@$keycloak_db_host_address:$psql_pwd_path $remote_psql_pwd_path" || die
#		keycloak_db_password="$(cat $remote_psql_pwd_path)"
#		remote_admin_pwd="/etc/remote-keycloak.secret"
#		ucr set keycloak/server/sso/certificate/generation='false'
#fi

# Re-create Apache configuration after the certificate generation

[ -x /usr/sbin/univention-config-registry ] && univention-config-registry register univention-keycloak || true
ucr commit /etc/apache2/sites-available/univention-keycloak.conf
a2ensite univention-keycloak
systemctl restart apache2

## TODO: Is this needed on non "master" kc installations ?
[ -x /usr/sbin/univention-config-registry ] && univention-config-registry register 50-keycloak || true
ucr commit /etc/postgresql/11/main/pg_hba.conf
service postgresql restart

sso_hostname="$(echo "$keycloak_server_sso_fqdn"  | cut -d '.' -f 1)"
sso_domainname="$(echo "$keycloak_server_sso_fqdn"  | cut -d '.' -f 2-)"

if [ -z "$keycloak_server_sso_autoregistration" ] || is_ucr_true keycloak/server/sso/autoregistration; then
	/usr/share/univention-directory-manager-tools/univention-dnsedit "$@" --ignore-exists \
		"$sso_domainname" add a "$sso_hostname" "$(get_default_ip_address)" || die
	if is_localhost_in_admember_mode; then
		ucs_parseCredentials "$@"
		if [ -n "$binddn" ] && [ -n "$bindpwdfile" ]; then
			add_host_record_in_ad "$binddn" "" "$bindpwdfile" \
				"$keycloak_server_sso_fqdn" "$(get_default_ip_address)" || die
		fi
	fi
fi

#cp /var/lib/univention-appcenter/apps/keycloak/conf/keycloak_template.conf /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
#sed -i "s/db-password=password/db-password=$keycloak_db_password/g" /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
#sed -i "s/db-url=jdbc:postgresql:\/\/localhost\/keycloak/db-url=jdbc:postgresql:\/\/$keycloak_db_host_address\/keycloak/g" /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf
#docker cp /var/lib/univention-appcenter/apps/keycloak/conf/keycloak.conf keycloak:/opt/keycloak/conf/keycloak.conf

#cp /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping-template.xml /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
#sed -i "s/\${env.LOCAL_DB_PASSWORD}/$keycloak_db_password/g" /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
#sed -i "s/\${env.LOCAL_DB_URL_HOST}/$keycloak_db_host_address/g" /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml
#docker cp /var/lib/univention-appcenter/apps/keycloak/conf/cache-ispn-jdbc-ping.xml keycloak:/opt/keycloak/conf/cache-ispn-jdbc-ping.xml

univention-app shell keycloak ../bin/kc.sh build --db=postgres
univention-app restart keycloak

i=0; while [ "$(docker inspect -f "{{.State.Health.Status}}" "keycloak")" != "healthy" ] && [ "$((++i))" -lt 100 ]; do  sleep 2; done; if [ "$i" -eq 100 ]; then echo "ERROR: Container did not come up healthy"; exit 1; fi
echo "Container is healty, configuring Keycloak"
# TODO: Use the joinscript credentials somehow - $remote_admin_pwd -> $bindpwdfile, add kc-user
univention-keycloak "$@" --keycloak-pwd "$remote_admin_pwd" init || die

joinscript_save_current_version

exit 0
