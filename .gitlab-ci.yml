# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2024 Univention GmbH

---

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.36.1"
    file:
      - "defaults/stages.yaml"
      - "defaults/nubus-workflow.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build-external.yaml"

  - project: "univention/dist/docker-services"
    ref: "master"
    file:
      - "dind.yml"

.build-matrix: &build-matrix
  - IMAGE_NAME: "keycloak-app"
    DOCKERFILE_PATH: "./Dockerfile"
    KANIKO_BUILD_CONTEXT: "./"
    KANIKO_ARGS: "--build-arg KEYCLOAK_VERSION=25.0.6 --build-arg KEYCLOAK_DIST=https://git.knut.univention.de/api/v4/projects/600/packages/generic/keycloak-tar/25.0.6/keycloak-25.0.6.tar.gz"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
      - "keycloak-app"

container-build:
  parallel:
    matrix: *build-matrix

container-malware-scan:
  parallel:
    matrix: *publish-matrix

container-sign-external:
  parallel:
    matrix: *build-matrix

push-image-external:
  parallel:
    matrix: *publish-matrix

test-udm-unit-and-integration::
  stage: test
  extends: .dind
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.7"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  before_script:
    - cd extensions/tests
    # Allow that the Docker API version is negotiated between client and server
    - unset DOCKER_API_VERSION
    - export IMAGE_TAG=${RELEASE_VERSION}
    - echo -e "\e[0Ksection_start:`date +%s`:docker_debug[collapsed=true]\r\e[0KDocker version details"
    - echo $IMAGE_TAG
    - docker version
    - echo -e "\e[0Ksection_end:`date +%s`:docker_debug\r\e[0K"
    - echo -e "\e[0Ksection_start:`date +%s`:docker_compose_config[collapsed=true]\r\e[0KDocker Compose configuration"
    - docker compose config test
    - echo -e "\e[0Ksection_end:`date +%s`:docker_compose_config\r\e[0K"
    - docker compose up --no-build --quiet-pull --wait --wait-timeout 60 ldap-server udm-rest-api
  script:
    - docker compose run --quiet-pull test
  after_script:
    - docker logs ldap-server >& ldap-server.log
    - docker logs udm-rest-api >& udm-rest-api.log
    - docker compose down --volumes
  artifacts:
    paths:
      - ldap-server.log
      - udm-rest-api.log
    expire_in: "1 day"
    when: "always"
    expose_as: "docker compose server logs"

