/*
 * Univention Directory Manager REST interface
 * Schema definition for the objects in the Univention Directory Manager REST interface
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UsersUserProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-25T19:07:57.795532733+01:00[Europe/Madrid]", comments = "Generator version: 7.9.0")
public class UsersUserProperties {
  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private LocalDate birthday;

  public static final String SERIALIZED_NAME_CERTIFICATE_DATE_NOT_AFTER = "certificateDateNotAfter";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DATE_NOT_AFTER)
  private LocalDate certificateDateNotAfter;

  public static final String SERIALIZED_NAME_CERTIFICATE_DATE_NOT_BEFORE = "certificateDateNotBefore";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DATE_NOT_BEFORE)
  private LocalDate certificateDateNotBefore;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_COMMON_NAME = "certificateIssuerCommonName";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_COMMON_NAME)
  private String certificateIssuerCommonName;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_COUNTRY = "certificateIssuerCountry";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_COUNTRY)
  private String certificateIssuerCountry;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_LOCATION = "certificateIssuerLocation";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_LOCATION)
  private String certificateIssuerLocation;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_MAIL = "certificateIssuerMail";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_MAIL)
  private String certificateIssuerMail;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_ORGANISATION = "certificateIssuerOrganisation";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_ORGANISATION)
  private String certificateIssuerOrganisation;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_ORGANISATIONAL_UNIT = "certificateIssuerOrganisationalUnit";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_ORGANISATIONAL_UNIT)
  private String certificateIssuerOrganisationalUnit;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUER_STATE = "certificateIssuerState";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUER_STATE)
  private String certificateIssuerState;

  public static final String SERIALIZED_NAME_CERTIFICATE_SERIAL = "certificateSerial";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SERIAL)
  private String certificateSerial;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_COMMON_NAME = "certificateSubjectCommonName";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_COMMON_NAME)
  private String certificateSubjectCommonName;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_COUNTRY = "certificateSubjectCountry";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_COUNTRY)
  private String certificateSubjectCountry;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_LOCATION = "certificateSubjectLocation";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_LOCATION)
  private String certificateSubjectLocation;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_MAIL = "certificateSubjectMail";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_MAIL)
  private String certificateSubjectMail;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_ORGANISATION = "certificateSubjectOrganisation";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_ORGANISATION)
  private String certificateSubjectOrganisation;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_ORGANISATIONAL_UNIT = "certificateSubjectOrganisationalUnit";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_ORGANISATIONAL_UNIT)
  private String certificateSubjectOrganisationalUnit;

  public static final String SERIALIZED_NAME_CERTIFICATE_SUBJECT_STATE = "certificateSubjectState";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_SUBJECT_STATE)
  private String certificateSubjectState;

  public static final String SERIALIZED_NAME_CERTIFICATE_VERSION = "certificateVersion";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_VERSION)
  private String certificateVersion;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DEPARTMENT_NUMBER = "departmentNumber";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_NUMBER)
  private Set<String> departmentNumber;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_E_MAIL = "e-mail";
  @SerializedName(SERIALIZED_NAME_E_MAIL)
  private Set<String> eMail;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE = "employeeType";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE)
  private String employeeType;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_GECOS = "gecos";
  @SerializedName(SERIALIZED_NAME_GECOS)
  private String gecos;

  public static final String SERIALIZED_NAME_GID_NUMBER = "gidNumber";
  @SerializedName(SERIALIZED_NAME_GID_NUMBER)
  private Integer gidNumber;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private Set<String> groups;

  public static final String SERIALIZED_NAME_HOME_POSTAL_ADDRESS = "homePostalAddress";
  @SerializedName(SERIALIZED_NAME_HOME_POSTAL_ADDRESS)
  private Set<Map<String, Object>> homePostalAddress;

  public static final String SERIALIZED_NAME_HOME_SHARE = "homeShare";
  @SerializedName(SERIALIZED_NAME_HOME_SHARE)
  private String homeShare;

  public static final String SERIALIZED_NAME_HOME_SHARE_PATH = "homeSharePath";
  @SerializedName(SERIALIZED_NAME_HOME_SHARE_PATH)
  private String homeSharePath;

  public static final String SERIALIZED_NAME_HOME_TELEPHONE_NUMBER = "homeTelephoneNumber";
  @SerializedName(SERIALIZED_NAME_HOME_TELEPHONE_NUMBER)
  private Set<String> homeTelephoneNumber;

  public static final String SERIALIZED_NAME_HOMEDRIVE = "homedrive";
  @SerializedName(SERIALIZED_NAME_HOMEDRIVE)
  private String homedrive;

  public static final String SERIALIZED_NAME_INITIALS = "initials";
  @SerializedName(SERIALIZED_NAME_INITIALS)
  private String initials;

  public static final String SERIALIZED_NAME_JPEG_PHOTO = "jpegPhoto";
  @SerializedName(SERIALIZED_NAME_JPEG_PHOTO)
  private byte[] jpegPhoto;

  public static final String SERIALIZED_NAME_LASTBIND = "lastbind";
  @SerializedName(SERIALIZED_NAME_LASTBIND)
  private String lastbind;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_LOCKED_TIME = "lockedTime";
  @SerializedName(SERIALIZED_NAME_LOCKED_TIME)
  private String lockedTime;

  public static final String SERIALIZED_NAME_MAIL_ALTERNATIVE_ADDRESS = "mailAlternativeAddress";
  @SerializedName(SERIALIZED_NAME_MAIL_ALTERNATIVE_ADDRESS)
  private Set<String> mailAlternativeAddress;

  public static final String SERIALIZED_NAME_MAIL_FORWARD_ADDRESS = "mailForwardAddress";
  @SerializedName(SERIALIZED_NAME_MAIL_FORWARD_ADDRESS)
  private Set<String> mailForwardAddress;

  public static final String SERIALIZED_NAME_MAIL_FORWARD_COPY_TO_SELF = "mailForwardCopyToSelf";
  @SerializedName(SERIALIZED_NAME_MAIL_FORWARD_COPY_TO_SELF)
  private String mailForwardCopyToSelf;

  public static final String SERIALIZED_NAME_MAIL_HOME_SERVER = "mailHomeServer";
  @SerializedName(SERIALIZED_NAME_MAIL_HOME_SERVER)
  private String mailHomeServer;

  public static final String SERIALIZED_NAME_MAIL_PRIMARY_ADDRESS = "mailPrimaryAddress";
  @SerializedName(SERIALIZED_NAME_MAIL_PRIMARY_ADDRESS)
  private String mailPrimaryAddress;

  public static final String SERIALIZED_NAME_MOBILE_TELEPHONE_NUMBER = "mobileTelephoneNumber";
  @SerializedName(SERIALIZED_NAME_MOBILE_TELEPHONE_NUMBER)
  private Set<String> mobileTelephoneNumber;

  public static final String SERIALIZED_NAME_OBJECT_FLAG = "objectFlag";
  @SerializedName(SERIALIZED_NAME_OBJECT_FLAG)
  private Set<String> objectFlag;

  public static final String SERIALIZED_NAME_ORGANISATION = "organisation";
  @SerializedName(SERIALIZED_NAME_ORGANISATION)
  private String organisation;

  public static final String SERIALIZED_NAME_OVERRIDE_P_W_HISTORY = "overridePWHistory";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_P_W_HISTORY)
  private Boolean overridePWHistory;

  public static final String SERIALIZED_NAME_OVERRIDE_P_W_LENGTH = "overridePWLength";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_P_W_LENGTH)
  private Boolean overridePWLength;

  public static final String SERIALIZED_NAME_PAGER_TELEPHONE_NUMBER = "pagerTelephoneNumber";
  @SerializedName(SERIALIZED_NAME_PAGER_TELEPHONE_NUMBER)
  private Set<String> pagerTelephoneNumber;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORDEXPIRY = "passwordexpiry";
  @SerializedName(SERIALIZED_NAME_PASSWORDEXPIRY)
  private LocalDate passwordexpiry;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private Set<String> phone;

  public static final String SERIALIZED_NAME_PHYSICAL_DELIVERY_OFFICE_NAME = "physicalDeliveryOfficeName";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_DELIVERY_OFFICE_NAME)
  private String physicalDeliveryOfficeName;

  public static final String SERIALIZED_NAME_POST_OFFICE_BOX = "postOfficeBox";
  @SerializedName(SERIALIZED_NAME_POST_OFFICE_BOX)
  private Set<String> postOfficeBox;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  private String postcode;

  public static final String SERIALIZED_NAME_PREFERRED_DELIVERY_METHOD = "preferredDeliveryMethod";
  @SerializedName(SERIALIZED_NAME_PREFERRED_DELIVERY_METHOD)
  private String preferredDeliveryMethod;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGE = "preferredLanguage";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGE)
  private String preferredLanguage;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP = "primaryGroup";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP)
  private String primaryGroup;

  public static final String SERIALIZED_NAME_PROFILEPATH = "profilepath";
  @SerializedName(SERIALIZED_NAME_PROFILEPATH)
  private String profilepath;

  public static final String SERIALIZED_NAME_PWD_CHANGE_NEXT_LOGIN = "pwdChangeNextLogin";
  @SerializedName(SERIALIZED_NAME_PWD_CHANGE_NEXT_LOGIN)
  private Boolean pwdChangeNextLogin;

  public static final String SERIALIZED_NAME_ROOM_NUMBER = "roomNumber";
  @SerializedName(SERIALIZED_NAME_ROOM_NUMBER)
  private Set<String> roomNumber;

  public static final String SERIALIZED_NAME_SAMBA_LOGON_HOURS = "sambaLogonHours";
  @SerializedName(SERIALIZED_NAME_SAMBA_LOGON_HOURS)
  private List<String> sambaLogonHours;

  public static final String SERIALIZED_NAME_SAMBA_PRIVILEGES = "sambaPrivileges";
  @SerializedName(SERIALIZED_NAME_SAMBA_PRIVILEGES)
  private Set<String> sambaPrivileges;

  public static final String SERIALIZED_NAME_SAMBA_R_I_D = "sambaRID";
  @SerializedName(SERIALIZED_NAME_SAMBA_R_I_D)
  private Integer sambaRID;

  public static final String SERIALIZED_NAME_SAMBA_USER_WORKSTATIONS = "sambaUserWorkstations";
  @SerializedName(SERIALIZED_NAME_SAMBA_USER_WORKSTATIONS)
  private Set<String> sambaUserWorkstations;

  public static final String SERIALIZED_NAME_SAMBAHOME = "sambahome";
  @SerializedName(SERIALIZED_NAME_SAMBAHOME)
  private String sambahome;

  public static final String SERIALIZED_NAME_SCRIPTPATH = "scriptpath";
  @SerializedName(SERIALIZED_NAME_SCRIPTPATH)
  private String scriptpath;

  public static final String SERIALIZED_NAME_SECRETARY = "secretary";
  @SerializedName(SERIALIZED_NAME_SECRETARY)
  private Set<String> secretary;

  public static final String SERIALIZED_NAME_SERVICEPROVIDER = "serviceprovider";
  @SerializedName(SERIALIZED_NAME_SERVICEPROVIDER)
  private Set<String> serviceprovider;

  public static final String SERIALIZED_NAME_SHELL = "shell";
  @SerializedName(SERIALIZED_NAME_SHELL)
  private String shell;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UID_NUMBER = "uidNumber";
  @SerializedName(SERIALIZED_NAME_UID_NUMBER)
  private Integer uidNumber;

  public static final String SERIALIZED_NAME_UMC_PROPERTY = "umcProperty";
  @SerializedName(SERIALIZED_NAME_UMC_PROPERTY)
  private Map<String, Object> umcProperty;

  public static final String SERIALIZED_NAME_UNIXHOME = "unixhome";
  @SerializedName(SERIALIZED_NAME_UNIXHOME)
  private String unixhome;

  public static final String SERIALIZED_NAME_UNLOCK = "unlock";
  @SerializedName(SERIALIZED_NAME_UNLOCK)
  private Boolean unlock;

  public static final String SERIALIZED_NAME_UNLOCK_TIME = "unlockTime";
  @SerializedName(SERIALIZED_NAME_UNLOCK_TIME)
  private String unlockTime;

  public static final String SERIALIZED_NAME_USER_CERTIFICATE = "userCertificate";
  @SerializedName(SERIALIZED_NAME_USER_CERTIFICATE)
  private byte[] userCertificate;

  public static final String SERIALIZED_NAME_USEREXPIRY = "userexpiry";
  @SerializedName(SERIALIZED_NAME_USEREXPIRY)
  private LocalDate userexpiry;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public UsersUserProperties() {
  }

  public UsersUserProperties(
     String password
  ) {
    this();
    this.password = password;
  }

  public UsersUserProperties birthday(LocalDate birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public LocalDate getBirthday() {
    return birthday;
  }

  public void setBirthday(LocalDate birthday) {
    this.birthday = birthday;
  }


  public UsersUserProperties certificateDateNotAfter(LocalDate certificateDateNotAfter) {
    this.certificateDateNotAfter = certificateDateNotAfter;
    return this;
  }

  /**
   * Get certificateDateNotAfter
   * @return certificateDateNotAfter
   */
  @javax.annotation.Nullable
  public LocalDate getCertificateDateNotAfter() {
    return certificateDateNotAfter;
  }

  public void setCertificateDateNotAfter(LocalDate certificateDateNotAfter) {
    this.certificateDateNotAfter = certificateDateNotAfter;
  }


  public UsersUserProperties certificateDateNotBefore(LocalDate certificateDateNotBefore) {
    this.certificateDateNotBefore = certificateDateNotBefore;
    return this;
  }

  /**
   * Get certificateDateNotBefore
   * @return certificateDateNotBefore
   */
  @javax.annotation.Nullable
  public LocalDate getCertificateDateNotBefore() {
    return certificateDateNotBefore;
  }

  public void setCertificateDateNotBefore(LocalDate certificateDateNotBefore) {
    this.certificateDateNotBefore = certificateDateNotBefore;
  }


  public UsersUserProperties certificateIssuerCommonName(String certificateIssuerCommonName) {
    this.certificateIssuerCommonName = certificateIssuerCommonName;
    return this;
  }

  /**
   * Get certificateIssuerCommonName
   * @return certificateIssuerCommonName
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerCommonName() {
    return certificateIssuerCommonName;
  }

  public void setCertificateIssuerCommonName(String certificateIssuerCommonName) {
    this.certificateIssuerCommonName = certificateIssuerCommonName;
  }


  public UsersUserProperties certificateIssuerCountry(String certificateIssuerCountry) {
    this.certificateIssuerCountry = certificateIssuerCountry;
    return this;
  }

  /**
   * Get certificateIssuerCountry
   * @return certificateIssuerCountry
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerCountry() {
    return certificateIssuerCountry;
  }

  public void setCertificateIssuerCountry(String certificateIssuerCountry) {
    this.certificateIssuerCountry = certificateIssuerCountry;
  }


  public UsersUserProperties certificateIssuerLocation(String certificateIssuerLocation) {
    this.certificateIssuerLocation = certificateIssuerLocation;
    return this;
  }

  /**
   * Get certificateIssuerLocation
   * @return certificateIssuerLocation
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerLocation() {
    return certificateIssuerLocation;
  }

  public void setCertificateIssuerLocation(String certificateIssuerLocation) {
    this.certificateIssuerLocation = certificateIssuerLocation;
  }


  public UsersUserProperties certificateIssuerMail(String certificateIssuerMail) {
    this.certificateIssuerMail = certificateIssuerMail;
    return this;
  }

  /**
   * Get certificateIssuerMail
   * @return certificateIssuerMail
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerMail() {
    return certificateIssuerMail;
  }

  public void setCertificateIssuerMail(String certificateIssuerMail) {
    this.certificateIssuerMail = certificateIssuerMail;
  }


  public UsersUserProperties certificateIssuerOrganisation(String certificateIssuerOrganisation) {
    this.certificateIssuerOrganisation = certificateIssuerOrganisation;
    return this;
  }

  /**
   * Get certificateIssuerOrganisation
   * @return certificateIssuerOrganisation
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerOrganisation() {
    return certificateIssuerOrganisation;
  }

  public void setCertificateIssuerOrganisation(String certificateIssuerOrganisation) {
    this.certificateIssuerOrganisation = certificateIssuerOrganisation;
  }


  public UsersUserProperties certificateIssuerOrganisationalUnit(String certificateIssuerOrganisationalUnit) {
    this.certificateIssuerOrganisationalUnit = certificateIssuerOrganisationalUnit;
    return this;
  }

  /**
   * Get certificateIssuerOrganisationalUnit
   * @return certificateIssuerOrganisationalUnit
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerOrganisationalUnit() {
    return certificateIssuerOrganisationalUnit;
  }

  public void setCertificateIssuerOrganisationalUnit(String certificateIssuerOrganisationalUnit) {
    this.certificateIssuerOrganisationalUnit = certificateIssuerOrganisationalUnit;
  }


  public UsersUserProperties certificateIssuerState(String certificateIssuerState) {
    this.certificateIssuerState = certificateIssuerState;
    return this;
  }

  /**
   * Get certificateIssuerState
   * @return certificateIssuerState
   */
  @javax.annotation.Nullable
  public String getCertificateIssuerState() {
    return certificateIssuerState;
  }

  public void setCertificateIssuerState(String certificateIssuerState) {
    this.certificateIssuerState = certificateIssuerState;
  }


  public UsersUserProperties certificateSerial(String certificateSerial) {
    this.certificateSerial = certificateSerial;
    return this;
  }

  /**
   * Get certificateSerial
   * @return certificateSerial
   */
  @javax.annotation.Nullable
  public String getCertificateSerial() {
    return certificateSerial;
  }

  public void setCertificateSerial(String certificateSerial) {
    this.certificateSerial = certificateSerial;
  }


  public UsersUserProperties certificateSubjectCommonName(String certificateSubjectCommonName) {
    this.certificateSubjectCommonName = certificateSubjectCommonName;
    return this;
  }

  /**
   * Get certificateSubjectCommonName
   * @return certificateSubjectCommonName
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectCommonName() {
    return certificateSubjectCommonName;
  }

  public void setCertificateSubjectCommonName(String certificateSubjectCommonName) {
    this.certificateSubjectCommonName = certificateSubjectCommonName;
  }


  public UsersUserProperties certificateSubjectCountry(String certificateSubjectCountry) {
    this.certificateSubjectCountry = certificateSubjectCountry;
    return this;
  }

  /**
   * Get certificateSubjectCountry
   * @return certificateSubjectCountry
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectCountry() {
    return certificateSubjectCountry;
  }

  public void setCertificateSubjectCountry(String certificateSubjectCountry) {
    this.certificateSubjectCountry = certificateSubjectCountry;
  }


  public UsersUserProperties certificateSubjectLocation(String certificateSubjectLocation) {
    this.certificateSubjectLocation = certificateSubjectLocation;
    return this;
  }

  /**
   * Get certificateSubjectLocation
   * @return certificateSubjectLocation
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectLocation() {
    return certificateSubjectLocation;
  }

  public void setCertificateSubjectLocation(String certificateSubjectLocation) {
    this.certificateSubjectLocation = certificateSubjectLocation;
  }


  public UsersUserProperties certificateSubjectMail(String certificateSubjectMail) {
    this.certificateSubjectMail = certificateSubjectMail;
    return this;
  }

  /**
   * Get certificateSubjectMail
   * @return certificateSubjectMail
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectMail() {
    return certificateSubjectMail;
  }

  public void setCertificateSubjectMail(String certificateSubjectMail) {
    this.certificateSubjectMail = certificateSubjectMail;
  }


  public UsersUserProperties certificateSubjectOrganisation(String certificateSubjectOrganisation) {
    this.certificateSubjectOrganisation = certificateSubjectOrganisation;
    return this;
  }

  /**
   * Get certificateSubjectOrganisation
   * @return certificateSubjectOrganisation
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectOrganisation() {
    return certificateSubjectOrganisation;
  }

  public void setCertificateSubjectOrganisation(String certificateSubjectOrganisation) {
    this.certificateSubjectOrganisation = certificateSubjectOrganisation;
  }


  public UsersUserProperties certificateSubjectOrganisationalUnit(String certificateSubjectOrganisationalUnit) {
    this.certificateSubjectOrganisationalUnit = certificateSubjectOrganisationalUnit;
    return this;
  }

  /**
   * Get certificateSubjectOrganisationalUnit
   * @return certificateSubjectOrganisationalUnit
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectOrganisationalUnit() {
    return certificateSubjectOrganisationalUnit;
  }

  public void setCertificateSubjectOrganisationalUnit(String certificateSubjectOrganisationalUnit) {
    this.certificateSubjectOrganisationalUnit = certificateSubjectOrganisationalUnit;
  }


  public UsersUserProperties certificateSubjectState(String certificateSubjectState) {
    this.certificateSubjectState = certificateSubjectState;
    return this;
  }

  /**
   * Get certificateSubjectState
   * @return certificateSubjectState
   */
  @javax.annotation.Nullable
  public String getCertificateSubjectState() {
    return certificateSubjectState;
  }

  public void setCertificateSubjectState(String certificateSubjectState) {
    this.certificateSubjectState = certificateSubjectState;
  }


  public UsersUserProperties certificateVersion(String certificateVersion) {
    this.certificateVersion = certificateVersion;
    return this;
  }

  /**
   * Get certificateVersion
   * @return certificateVersion
   */
  @javax.annotation.Nullable
  public String getCertificateVersion() {
    return certificateVersion;
  }

  public void setCertificateVersion(String certificateVersion) {
    this.certificateVersion = certificateVersion;
  }


  public UsersUserProperties city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public UsersUserProperties country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public UsersUserProperties departmentNumber(Set<String> departmentNumber) {
    this.departmentNumber = departmentNumber;
    return this;
  }

  public UsersUserProperties addDepartmentNumberItem(String departmentNumberItem) {
    if (this.departmentNumber == null) {
      this.departmentNumber = new LinkedHashSet<>();
    }
    this.departmentNumber.add(departmentNumberItem);
    return this;
  }

  /**
   * Get departmentNumber
   * @return departmentNumber
   */
  @javax.annotation.Nullable
  public Set<String> getDepartmentNumber() {
    return departmentNumber;
  }

  public void setDepartmentNumber(Set<String> departmentNumber) {
    this.departmentNumber = departmentNumber;
  }


  public UsersUserProperties description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UsersUserProperties disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Get disabled
   * @return disabled
   */
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public UsersUserProperties displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public UsersUserProperties eMail(Set<String> eMail) {
    this.eMail = eMail;
    return this;
  }

  public UsersUserProperties addEMailItem(String eMailItem) {
    if (this.eMail == null) {
      this.eMail = new LinkedHashSet<>();
    }
    this.eMail.add(eMailItem);
    return this;
  }

  /**
   * Get eMail
   * @return eMail
   */
  @javax.annotation.Nullable
  public Set<String> geteMail() {
    return eMail;
  }

  public void seteMail(Set<String> eMail) {
    this.eMail = eMail;
  }


  public UsersUserProperties employeeNumber(String employeeNumber) {
    this.employeeNumber = employeeNumber;
    return this;
  }

  /**
   * Get employeeNumber
   * @return employeeNumber
   */
  @javax.annotation.Nullable
  public String getEmployeeNumber() {
    return employeeNumber;
  }

  public void setEmployeeNumber(String employeeNumber) {
    this.employeeNumber = employeeNumber;
  }


  public UsersUserProperties employeeType(String employeeType) {
    this.employeeType = employeeType;
    return this;
  }

  /**
   * Get employeeType
   * @return employeeType
   */
  @javax.annotation.Nullable
  public String getEmployeeType() {
    return employeeType;
  }

  public void setEmployeeType(String employeeType) {
    this.employeeType = employeeType;
  }


  public UsersUserProperties firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   */
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public UsersUserProperties gecos(String gecos) {
    this.gecos = gecos;
    return this;
  }

  /**
   * Get gecos
   * @return gecos
   */
  @javax.annotation.Nullable
  public String getGecos() {
    return gecos;
  }

  public void setGecos(String gecos) {
    this.gecos = gecos;
  }


  public UsersUserProperties gidNumber(Integer gidNumber) {
    this.gidNumber = gidNumber;
    return this;
  }

  /**
   * Get gidNumber
   * @return gidNumber
   */
  @javax.annotation.Nullable
  public Integer getGidNumber() {
    return gidNumber;
  }

  public void setGidNumber(Integer gidNumber) {
    this.gidNumber = gidNumber;
  }


  public UsersUserProperties groups(Set<String> groups) {
    this.groups = groups;
    return this;
  }

  public UsersUserProperties addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new LinkedHashSet<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  public Set<String> getGroups() {
    return groups;
  }

  public void setGroups(Set<String> groups) {
    this.groups = groups;
  }


  public UsersUserProperties homePostalAddress(Set<Map<String, Object>> homePostalAddress) {
    this.homePostalAddress = homePostalAddress;
    return this;
  }

  public UsersUserProperties addHomePostalAddressItem(Map<String, Object> homePostalAddressItem) {
    if (this.homePostalAddress == null) {
      this.homePostalAddress = new LinkedHashSet<>();
    }
    this.homePostalAddress.add(homePostalAddressItem);
    return this;
  }

  /**
   * Get homePostalAddress
   * @return homePostalAddress
   */
  @javax.annotation.Nullable
  public Set<Map<String, Object>> getHomePostalAddress() {
    return homePostalAddress;
  }

  public void setHomePostalAddress(Set<Map<String, Object>> homePostalAddress) {
    this.homePostalAddress = homePostalAddress;
  }


  public UsersUserProperties homeShare(String homeShare) {
    this.homeShare = homeShare;
    return this;
  }

  /**
   * Get homeShare
   * @return homeShare
   */
  @javax.annotation.Nullable
  public String getHomeShare() {
    return homeShare;
  }

  public void setHomeShare(String homeShare) {
    this.homeShare = homeShare;
  }


  public UsersUserProperties homeSharePath(String homeSharePath) {
    this.homeSharePath = homeSharePath;
    return this;
  }

  /**
   * Get homeSharePath
   * @return homeSharePath
   */
  @javax.annotation.Nullable
  public String getHomeSharePath() {
    return homeSharePath;
  }

  public void setHomeSharePath(String homeSharePath) {
    this.homeSharePath = homeSharePath;
  }


  public UsersUserProperties homeTelephoneNumber(Set<String> homeTelephoneNumber) {
    this.homeTelephoneNumber = homeTelephoneNumber;
    return this;
  }

  public UsersUserProperties addHomeTelephoneNumberItem(String homeTelephoneNumberItem) {
    if (this.homeTelephoneNumber == null) {
      this.homeTelephoneNumber = new LinkedHashSet<>();
    }
    this.homeTelephoneNumber.add(homeTelephoneNumberItem);
    return this;
  }

  /**
   * Get homeTelephoneNumber
   * @return homeTelephoneNumber
   */
  @javax.annotation.Nullable
  public Set<String> getHomeTelephoneNumber() {
    return homeTelephoneNumber;
  }

  public void setHomeTelephoneNumber(Set<String> homeTelephoneNumber) {
    this.homeTelephoneNumber = homeTelephoneNumber;
  }


  public UsersUserProperties homedrive(String homedrive) {
    this.homedrive = homedrive;
    return this;
  }

  /**
   * Get homedrive
   * @return homedrive
   */
  @javax.annotation.Nullable
  public String getHomedrive() {
    return homedrive;
  }

  public void setHomedrive(String homedrive) {
    this.homedrive = homedrive;
  }


  public UsersUserProperties initials(String initials) {
    this.initials = initials;
    return this;
  }

  /**
   * Get initials
   * @return initials
   */
  @javax.annotation.Nullable
  public String getInitials() {
    return initials;
  }

  public void setInitials(String initials) {
    this.initials = initials;
  }


  public UsersUserProperties jpegPhoto(byte[] jpegPhoto) {
    this.jpegPhoto = jpegPhoto;
    return this;
  }

  /**
   * Get jpegPhoto
   * @return jpegPhoto
   */
  @javax.annotation.Nullable
  public byte[] getJpegPhoto() {
    return jpegPhoto;
  }

  public void setJpegPhoto(byte[] jpegPhoto) {
    this.jpegPhoto = jpegPhoto;
  }


  public UsersUserProperties lastbind(String lastbind) {
    this.lastbind = lastbind;
    return this;
  }

  /**
   * Get lastbind
   * @return lastbind
   */
  @javax.annotation.Nullable
  public String getLastbind() {
    return lastbind;
  }

  public void setLastbind(String lastbind) {
    this.lastbind = lastbind;
  }


  public UsersUserProperties lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Get lastname
   * @return lastname
   */
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public UsersUserProperties locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

  /**
   * Get locked
   * @return locked
   */
  @javax.annotation.Nullable
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public UsersUserProperties lockedTime(String lockedTime) {
    this.lockedTime = lockedTime;
    return this;
  }

  /**
   * Get lockedTime
   * @return lockedTime
   */
  @javax.annotation.Nullable
  public String getLockedTime() {
    return lockedTime;
  }

  public void setLockedTime(String lockedTime) {
    this.lockedTime = lockedTime;
  }


  public UsersUserProperties mailAlternativeAddress(Set<String> mailAlternativeAddress) {
    this.mailAlternativeAddress = mailAlternativeAddress;
    return this;
  }

  public UsersUserProperties addMailAlternativeAddressItem(String mailAlternativeAddressItem) {
    if (this.mailAlternativeAddress == null) {
      this.mailAlternativeAddress = new LinkedHashSet<>();
    }
    this.mailAlternativeAddress.add(mailAlternativeAddressItem);
    return this;
  }

  /**
   * Get mailAlternativeAddress
   * @return mailAlternativeAddress
   */
  @javax.annotation.Nullable
  public Set<String> getMailAlternativeAddress() {
    return mailAlternativeAddress;
  }

  public void setMailAlternativeAddress(Set<String> mailAlternativeAddress) {
    this.mailAlternativeAddress = mailAlternativeAddress;
  }


  public UsersUserProperties mailForwardAddress(Set<String> mailForwardAddress) {
    this.mailForwardAddress = mailForwardAddress;
    return this;
  }

  public UsersUserProperties addMailForwardAddressItem(String mailForwardAddressItem) {
    if (this.mailForwardAddress == null) {
      this.mailForwardAddress = new LinkedHashSet<>();
    }
    this.mailForwardAddress.add(mailForwardAddressItem);
    return this;
  }

  /**
   * Get mailForwardAddress
   * @return mailForwardAddress
   */
  @javax.annotation.Nullable
  public Set<String> getMailForwardAddress() {
    return mailForwardAddress;
  }

  public void setMailForwardAddress(Set<String> mailForwardAddress) {
    this.mailForwardAddress = mailForwardAddress;
  }


  public UsersUserProperties mailForwardCopyToSelf(String mailForwardCopyToSelf) {
    this.mailForwardCopyToSelf = mailForwardCopyToSelf;
    return this;
  }

  /**
   * Get mailForwardCopyToSelf
   * @return mailForwardCopyToSelf
   */
  @javax.annotation.Nullable
  public String getMailForwardCopyToSelf() {
    return mailForwardCopyToSelf;
  }

  public void setMailForwardCopyToSelf(String mailForwardCopyToSelf) {
    this.mailForwardCopyToSelf = mailForwardCopyToSelf;
  }


  public UsersUserProperties mailHomeServer(String mailHomeServer) {
    this.mailHomeServer = mailHomeServer;
    return this;
  }

  /**
   * Get mailHomeServer
   * @return mailHomeServer
   */
  @javax.annotation.Nullable
  public String getMailHomeServer() {
    return mailHomeServer;
  }

  public void setMailHomeServer(String mailHomeServer) {
    this.mailHomeServer = mailHomeServer;
  }


  public UsersUserProperties mailPrimaryAddress(String mailPrimaryAddress) {
    this.mailPrimaryAddress = mailPrimaryAddress;
    return this;
  }

  /**
   * Get mailPrimaryAddress
   * @return mailPrimaryAddress
   */
  @javax.annotation.Nullable
  public String getMailPrimaryAddress() {
    return mailPrimaryAddress;
  }

  public void setMailPrimaryAddress(String mailPrimaryAddress) {
    this.mailPrimaryAddress = mailPrimaryAddress;
  }


  public UsersUserProperties mobileTelephoneNumber(Set<String> mobileTelephoneNumber) {
    this.mobileTelephoneNumber = mobileTelephoneNumber;
    return this;
  }

  public UsersUserProperties addMobileTelephoneNumberItem(String mobileTelephoneNumberItem) {
    if (this.mobileTelephoneNumber == null) {
      this.mobileTelephoneNumber = new LinkedHashSet<>();
    }
    this.mobileTelephoneNumber.add(mobileTelephoneNumberItem);
    return this;
  }

  /**
   * Get mobileTelephoneNumber
   * @return mobileTelephoneNumber
   */
  @javax.annotation.Nullable
  public Set<String> getMobileTelephoneNumber() {
    return mobileTelephoneNumber;
  }

  public void setMobileTelephoneNumber(Set<String> mobileTelephoneNumber) {
    this.mobileTelephoneNumber = mobileTelephoneNumber;
  }


  public UsersUserProperties objectFlag(Set<String> objectFlag) {
    this.objectFlag = objectFlag;
    return this;
  }

  public UsersUserProperties addObjectFlagItem(String objectFlagItem) {
    if (this.objectFlag == null) {
      this.objectFlag = new LinkedHashSet<>();
    }
    this.objectFlag.add(objectFlagItem);
    return this;
  }

  /**
   * Get objectFlag
   * @return objectFlag
   */
  @javax.annotation.Nullable
  public Set<String> getObjectFlag() {
    return objectFlag;
  }

  public void setObjectFlag(Set<String> objectFlag) {
    this.objectFlag = objectFlag;
  }


  public UsersUserProperties organisation(String organisation) {
    this.organisation = organisation;
    return this;
  }

  /**
   * Get organisation
   * @return organisation
   */
  @javax.annotation.Nullable
  public String getOrganisation() {
    return organisation;
  }

  public void setOrganisation(String organisation) {
    this.organisation = organisation;
  }


  public UsersUserProperties overridePWHistory(Boolean overridePWHistory) {
    this.overridePWHistory = overridePWHistory;
    return this;
  }

  /**
   * Get overridePWHistory
   * @return overridePWHistory
   */
  @javax.annotation.Nullable
  public Boolean getOverridePWHistory() {
    return overridePWHistory;
  }

  public void setOverridePWHistory(Boolean overridePWHistory) {
    this.overridePWHistory = overridePWHistory;
  }


  public UsersUserProperties overridePWLength(Boolean overridePWLength) {
    this.overridePWLength = overridePWLength;
    return this;
  }

  /**
   * Get overridePWLength
   * @return overridePWLength
   */
  @javax.annotation.Nullable
  public Boolean getOverridePWLength() {
    return overridePWLength;
  }

  public void setOverridePWLength(Boolean overridePWLength) {
    this.overridePWLength = overridePWLength;
  }


  public UsersUserProperties pagerTelephoneNumber(Set<String> pagerTelephoneNumber) {
    this.pagerTelephoneNumber = pagerTelephoneNumber;
    return this;
  }

  public UsersUserProperties addPagerTelephoneNumberItem(String pagerTelephoneNumberItem) {
    if (this.pagerTelephoneNumber == null) {
      this.pagerTelephoneNumber = new LinkedHashSet<>();
    }
    this.pagerTelephoneNumber.add(pagerTelephoneNumberItem);
    return this;
  }

  /**
   * Get pagerTelephoneNumber
   * @return pagerTelephoneNumber
   */
  @javax.annotation.Nullable
  public Set<String> getPagerTelephoneNumber() {
    return pagerTelephoneNumber;
  }

  public void setPagerTelephoneNumber(Set<String> pagerTelephoneNumber) {
    this.pagerTelephoneNumber = pagerTelephoneNumber;
  }


  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  // Manually added, it wasn't auto generated
  public void setPassword(String password) {
    this.password = password;
  }


  public UsersUserProperties passwordexpiry(LocalDate passwordexpiry) {
    this.passwordexpiry = passwordexpiry;
    return this;
  }

  /**
   * Get passwordexpiry
   * @return passwordexpiry
   */
  @javax.annotation.Nullable
  public LocalDate getPasswordexpiry() {
    return passwordexpiry;
  }

  public void setPasswordexpiry(LocalDate passwordexpiry) {
    this.passwordexpiry = passwordexpiry;
  }


  public UsersUserProperties phone(Set<String> phone) {
    this.phone = phone;
    return this;
  }

  public UsersUserProperties addPhoneItem(String phoneItem) {
    if (this.phone == null) {
      this.phone = new LinkedHashSet<>();
    }
    this.phone.add(phoneItem);
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public Set<String> getPhone() {
    return phone;
  }

  public void setPhone(Set<String> phone) {
    this.phone = phone;
  }


  public UsersUserProperties physicalDeliveryOfficeName(String physicalDeliveryOfficeName) {
    this.physicalDeliveryOfficeName = physicalDeliveryOfficeName;
    return this;
  }

  /**
   * Get physicalDeliveryOfficeName
   * @return physicalDeliveryOfficeName
   */
  @javax.annotation.Nullable
  public String getPhysicalDeliveryOfficeName() {
    return physicalDeliveryOfficeName;
  }

  public void setPhysicalDeliveryOfficeName(String physicalDeliveryOfficeName) {
    this.physicalDeliveryOfficeName = physicalDeliveryOfficeName;
  }


  public UsersUserProperties postOfficeBox(Set<String> postOfficeBox) {
    this.postOfficeBox = postOfficeBox;
    return this;
  }

  public UsersUserProperties addPostOfficeBoxItem(String postOfficeBoxItem) {
    if (this.postOfficeBox == null) {
      this.postOfficeBox = new LinkedHashSet<>();
    }
    this.postOfficeBox.add(postOfficeBoxItem);
    return this;
  }

  /**
   * Get postOfficeBox
   * @return postOfficeBox
   */
  @javax.annotation.Nullable
  public Set<String> getPostOfficeBox() {
    return postOfficeBox;
  }

  public void setPostOfficeBox(Set<String> postOfficeBox) {
    this.postOfficeBox = postOfficeBox;
  }


  public UsersUserProperties postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }

  /**
   * Get postcode
   * @return postcode
   */
  @javax.annotation.Nullable
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public UsersUserProperties preferredDeliveryMethod(String preferredDeliveryMethod) {
    this.preferredDeliveryMethod = preferredDeliveryMethod;
    return this;
  }

  /**
   * Get preferredDeliveryMethod
   * @return preferredDeliveryMethod
   */
  @javax.annotation.Nullable
  public String getPreferredDeliveryMethod() {
    return preferredDeliveryMethod;
  }

  public void setPreferredDeliveryMethod(String preferredDeliveryMethod) {
    this.preferredDeliveryMethod = preferredDeliveryMethod;
  }


  public UsersUserProperties preferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
    return this;
  }

  /**
   * Get preferredLanguage
   * @return preferredLanguage
   */
  @javax.annotation.Nullable
  public String getPreferredLanguage() {
    return preferredLanguage;
  }

  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public UsersUserProperties primaryGroup(String primaryGroup) {
    this.primaryGroup = primaryGroup;
    return this;
  }

  /**
   * Get primaryGroup
   * @return primaryGroup
   */
  @javax.annotation.Nullable
  public String getPrimaryGroup() {
    return primaryGroup;
  }

  public void setPrimaryGroup(String primaryGroup) {
    this.primaryGroup = primaryGroup;
  }


  public UsersUserProperties profilepath(String profilepath) {
    this.profilepath = profilepath;
    return this;
  }

  /**
   * Get profilepath
   * @return profilepath
   */
  @javax.annotation.Nullable
  public String getProfilepath() {
    return profilepath;
  }

  public void setProfilepath(String profilepath) {
    this.profilepath = profilepath;
  }


  public UsersUserProperties pwdChangeNextLogin(Boolean pwdChangeNextLogin) {
    this.pwdChangeNextLogin = pwdChangeNextLogin;
    return this;
  }

  /**
   * Get pwdChangeNextLogin
   * @return pwdChangeNextLogin
   */
  @javax.annotation.Nullable
  public Boolean getPwdChangeNextLogin() {
    return pwdChangeNextLogin;
  }

  public void setPwdChangeNextLogin(Boolean pwdChangeNextLogin) {
    this.pwdChangeNextLogin = pwdChangeNextLogin;
  }


  public UsersUserProperties roomNumber(Set<String> roomNumber) {
    this.roomNumber = roomNumber;
    return this;
  }

  public UsersUserProperties addRoomNumberItem(String roomNumberItem) {
    if (this.roomNumber == null) {
      this.roomNumber = new LinkedHashSet<>();
    }
    this.roomNumber.add(roomNumberItem);
    return this;
  }

  /**
   * Get roomNumber
   * @return roomNumber
   */
  @javax.annotation.Nullable
  public Set<String> getRoomNumber() {
    return roomNumber;
  }

  public void setRoomNumber(Set<String> roomNumber) {
    this.roomNumber = roomNumber;
  }


  public UsersUserProperties sambaLogonHours(List<String> sambaLogonHours) {
    this.sambaLogonHours = sambaLogonHours;
    return this;
  }

  public UsersUserProperties addSambaLogonHoursItem(String sambaLogonHoursItem) {
    if (this.sambaLogonHours == null) {
      this.sambaLogonHours = new ArrayList<>();
    }
    this.sambaLogonHours.add(sambaLogonHoursItem);
    return this;
  }

  /**
   * Get sambaLogonHours
   * @return sambaLogonHours
   */
  @javax.annotation.Nullable
  public List<String> getSambaLogonHours() {
    return sambaLogonHours;
  }

  public void setSambaLogonHours(List<String> sambaLogonHours) {
    this.sambaLogonHours = sambaLogonHours;
  }


  public UsersUserProperties sambaPrivileges(Set<String> sambaPrivileges) {
    this.sambaPrivileges = sambaPrivileges;
    return this;
  }

  public UsersUserProperties addSambaPrivilegesItem(String sambaPrivilegesItem) {
    if (this.sambaPrivileges == null) {
      this.sambaPrivileges = new LinkedHashSet<>();
    }
    this.sambaPrivileges.add(sambaPrivilegesItem);
    return this;
  }

  /**
   * Get sambaPrivileges
   * @return sambaPrivileges
   */
  @javax.annotation.Nullable
  public Set<String> getSambaPrivileges() {
    return sambaPrivileges;
  }

  public void setSambaPrivileges(Set<String> sambaPrivileges) {
    this.sambaPrivileges = sambaPrivileges;
  }


  public UsersUserProperties sambaRID(Integer sambaRID) {
    this.sambaRID = sambaRID;
    return this;
  }

  /**
   * Get sambaRID
   * @return sambaRID
   */
  @javax.annotation.Nullable
  public Integer getSambaRID() {
    return sambaRID;
  }

  public void setSambaRID(Integer sambaRID) {
    this.sambaRID = sambaRID;
  }


  public UsersUserProperties sambaUserWorkstations(Set<String> sambaUserWorkstations) {
    this.sambaUserWorkstations = sambaUserWorkstations;
    return this;
  }

  public UsersUserProperties addSambaUserWorkstationsItem(String sambaUserWorkstationsItem) {
    if (this.sambaUserWorkstations == null) {
      this.sambaUserWorkstations = new LinkedHashSet<>();
    }
    this.sambaUserWorkstations.add(sambaUserWorkstationsItem);
    return this;
  }

  /**
   * Get sambaUserWorkstations
   * @return sambaUserWorkstations
   */
  @javax.annotation.Nullable
  public Set<String> getSambaUserWorkstations() {
    return sambaUserWorkstations;
  }

  public void setSambaUserWorkstations(Set<String> sambaUserWorkstations) {
    this.sambaUserWorkstations = sambaUserWorkstations;
  }


  public UsersUserProperties sambahome(String sambahome) {
    this.sambahome = sambahome;
    return this;
  }

  /**
   * Get sambahome
   * @return sambahome
   */
  @javax.annotation.Nullable
  public String getSambahome() {
    return sambahome;
  }

  public void setSambahome(String sambahome) {
    this.sambahome = sambahome;
  }


  public UsersUserProperties scriptpath(String scriptpath) {
    this.scriptpath = scriptpath;
    return this;
  }

  /**
   * Get scriptpath
   * @return scriptpath
   */
  @javax.annotation.Nullable
  public String getScriptpath() {
    return scriptpath;
  }

  public void setScriptpath(String scriptpath) {
    this.scriptpath = scriptpath;
  }


  public UsersUserProperties secretary(Set<String> secretary) {
    this.secretary = secretary;
    return this;
  }

  public UsersUserProperties addSecretaryItem(String secretaryItem) {
    if (this.secretary == null) {
      this.secretary = new LinkedHashSet<>();
    }
    this.secretary.add(secretaryItem);
    return this;
  }

  /**
   * Get secretary
   * @return secretary
   */
  @javax.annotation.Nullable
  public Set<String> getSecretary() {
    return secretary;
  }

  public void setSecretary(Set<String> secretary) {
    this.secretary = secretary;
  }


  public UsersUserProperties serviceprovider(Set<String> serviceprovider) {
    this.serviceprovider = serviceprovider;
    return this;
  }

  public UsersUserProperties addServiceproviderItem(String serviceproviderItem) {
    if (this.serviceprovider == null) {
      this.serviceprovider = new LinkedHashSet<>();
    }
    this.serviceprovider.add(serviceproviderItem);
    return this;
  }

  /**
   * Get serviceprovider
   * @return serviceprovider
   */
  @javax.annotation.Nullable
  public Set<String> getServiceprovider() {
    return serviceprovider;
  }

  public void setServiceprovider(Set<String> serviceprovider) {
    this.serviceprovider = serviceprovider;
  }


  public UsersUserProperties shell(String shell) {
    this.shell = shell;
    return this;
  }

  /**
   * Get shell
   * @return shell
   */
  @javax.annotation.Nullable
  public String getShell() {
    return shell;
  }

  public void setShell(String shell) {
    this.shell = shell;
  }


  public UsersUserProperties street(String street) {
    this.street = street;
    return this;
  }

  /**
   * Get street
   * @return street
   */
  @javax.annotation.Nullable
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }


  public UsersUserProperties title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public UsersUserProperties uidNumber(Integer uidNumber) {
    this.uidNumber = uidNumber;
    return this;
  }

  /**
   * Get uidNumber
   * @return uidNumber
   */
  @javax.annotation.Nullable
  public Integer getUidNumber() {
    return uidNumber;
  }

  public void setUidNumber(Integer uidNumber) {
    this.uidNumber = uidNumber;
  }


  public UsersUserProperties umcProperty(Map<String, Object> umcProperty) {
    this.umcProperty = umcProperty;
    return this;
  }

  public UsersUserProperties putUmcPropertyItem(String key, Object umcPropertyItem) {
    if (this.umcProperty == null) {
      this.umcProperty = new HashMap<>();
    }
    this.umcProperty.put(key, umcPropertyItem);
    return this;
  }

  /**
   * Get umcProperty
   * @return umcProperty
   */
  @javax.annotation.Nullable
  public Map<String, Object> getUmcProperty() {
    return umcProperty;
  }

  public void setUmcProperty(Map<String, Object> umcProperty) {
    this.umcProperty = umcProperty;
  }


  public UsersUserProperties unixhome(String unixhome) {
    this.unixhome = unixhome;
    return this;
  }

  /**
   * Get unixhome
   * @return unixhome
   */
  @javax.annotation.Nullable
  public String getUnixhome() {
    return unixhome;
  }

  public void setUnixhome(String unixhome) {
    this.unixhome = unixhome;
  }


  public UsersUserProperties unlock(Boolean unlock) {
    this.unlock = unlock;
    return this;
  }

  /**
   * Get unlock
   * @return unlock
   */
  @javax.annotation.Nullable
  public Boolean getUnlock() {
    return unlock;
  }

  public void setUnlock(Boolean unlock) {
    this.unlock = unlock;
  }


  public UsersUserProperties unlockTime(String unlockTime) {
    this.unlockTime = unlockTime;
    return this;
  }

  /**
   * Get unlockTime
   * @return unlockTime
   */
  @javax.annotation.Nullable
  public String getUnlockTime() {
    return unlockTime;
  }

  public void setUnlockTime(String unlockTime) {
    this.unlockTime = unlockTime;
  }


  public UsersUserProperties userCertificate(byte[] userCertificate) {
    this.userCertificate = userCertificate;
    return this;
  }

  /**
   * Get userCertificate
   * @return userCertificate
   */
  @javax.annotation.Nullable
  public byte[] getUserCertificate() {
    return userCertificate;
  }

  public void setUserCertificate(byte[] userCertificate) {
    this.userCertificate = userCertificate;
  }


  public UsersUserProperties userexpiry(LocalDate userexpiry) {
    this.userexpiry = userexpiry;
    return this;
  }

  /**
   * Get userexpiry
   * @return userexpiry
   */
  @javax.annotation.Nullable
  public LocalDate getUserexpiry() {
    return userexpiry;
  }

  public void setUserexpiry(LocalDate userexpiry) {
    this.userexpiry = userexpiry;
  }


  public UsersUserProperties username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersUserProperties instance itself
   */
  public UsersUserProperties putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersUserProperties usersUserProperties = (UsersUserProperties) o;
    return Objects.equals(this.birthday, usersUserProperties.birthday) &&
        Objects.equals(this.certificateDateNotAfter, usersUserProperties.certificateDateNotAfter) &&
        Objects.equals(this.certificateDateNotBefore, usersUserProperties.certificateDateNotBefore) &&
        Objects.equals(this.certificateIssuerCommonName, usersUserProperties.certificateIssuerCommonName) &&
        Objects.equals(this.certificateIssuerCountry, usersUserProperties.certificateIssuerCountry) &&
        Objects.equals(this.certificateIssuerLocation, usersUserProperties.certificateIssuerLocation) &&
        Objects.equals(this.certificateIssuerMail, usersUserProperties.certificateIssuerMail) &&
        Objects.equals(this.certificateIssuerOrganisation, usersUserProperties.certificateIssuerOrganisation) &&
        Objects.equals(this.certificateIssuerOrganisationalUnit, usersUserProperties.certificateIssuerOrganisationalUnit) &&
        Objects.equals(this.certificateIssuerState, usersUserProperties.certificateIssuerState) &&
        Objects.equals(this.certificateSerial, usersUserProperties.certificateSerial) &&
        Objects.equals(this.certificateSubjectCommonName, usersUserProperties.certificateSubjectCommonName) &&
        Objects.equals(this.certificateSubjectCountry, usersUserProperties.certificateSubjectCountry) &&
        Objects.equals(this.certificateSubjectLocation, usersUserProperties.certificateSubjectLocation) &&
        Objects.equals(this.certificateSubjectMail, usersUserProperties.certificateSubjectMail) &&
        Objects.equals(this.certificateSubjectOrganisation, usersUserProperties.certificateSubjectOrganisation) &&
        Objects.equals(this.certificateSubjectOrganisationalUnit, usersUserProperties.certificateSubjectOrganisationalUnit) &&
        Objects.equals(this.certificateSubjectState, usersUserProperties.certificateSubjectState) &&
        Objects.equals(this.certificateVersion, usersUserProperties.certificateVersion) &&
        Objects.equals(this.city, usersUserProperties.city) &&
        Objects.equals(this.country, usersUserProperties.country) &&
        Objects.equals(this.departmentNumber, usersUserProperties.departmentNumber) &&
        Objects.equals(this.description, usersUserProperties.description) &&
        Objects.equals(this.disabled, usersUserProperties.disabled) &&
        Objects.equals(this.displayName, usersUserProperties.displayName) &&
        Objects.equals(this.eMail, usersUserProperties.eMail) &&
        Objects.equals(this.employeeNumber, usersUserProperties.employeeNumber) &&
        Objects.equals(this.employeeType, usersUserProperties.employeeType) &&
        Objects.equals(this.firstname, usersUserProperties.firstname) &&
        Objects.equals(this.gecos, usersUserProperties.gecos) &&
        Objects.equals(this.gidNumber, usersUserProperties.gidNumber) &&
        Objects.equals(this.groups, usersUserProperties.groups) &&
        Objects.equals(this.homePostalAddress, usersUserProperties.homePostalAddress) &&
        Objects.equals(this.homeShare, usersUserProperties.homeShare) &&
        Objects.equals(this.homeSharePath, usersUserProperties.homeSharePath) &&
        Objects.equals(this.homeTelephoneNumber, usersUserProperties.homeTelephoneNumber) &&
        Objects.equals(this.homedrive, usersUserProperties.homedrive) &&
        Objects.equals(this.initials, usersUserProperties.initials) &&
        Arrays.equals(this.jpegPhoto, usersUserProperties.jpegPhoto) &&
        Objects.equals(this.lastbind, usersUserProperties.lastbind) &&
        Objects.equals(this.lastname, usersUserProperties.lastname) &&
        Objects.equals(this.locked, usersUserProperties.locked) &&
        Objects.equals(this.lockedTime, usersUserProperties.lockedTime) &&
        Objects.equals(this.mailAlternativeAddress, usersUserProperties.mailAlternativeAddress) &&
        Objects.equals(this.mailForwardAddress, usersUserProperties.mailForwardAddress) &&
        Objects.equals(this.mailForwardCopyToSelf, usersUserProperties.mailForwardCopyToSelf) &&
        Objects.equals(this.mailHomeServer, usersUserProperties.mailHomeServer) &&
        Objects.equals(this.mailPrimaryAddress, usersUserProperties.mailPrimaryAddress) &&
        Objects.equals(this.mobileTelephoneNumber, usersUserProperties.mobileTelephoneNumber) &&
        Objects.equals(this.objectFlag, usersUserProperties.objectFlag) &&
        Objects.equals(this.organisation, usersUserProperties.organisation) &&
        Objects.equals(this.overridePWHistory, usersUserProperties.overridePWHistory) &&
        Objects.equals(this.overridePWLength, usersUserProperties.overridePWLength) &&
        Objects.equals(this.pagerTelephoneNumber, usersUserProperties.pagerTelephoneNumber) &&
        Objects.equals(this.password, usersUserProperties.password) &&
        Objects.equals(this.passwordexpiry, usersUserProperties.passwordexpiry) &&
        Objects.equals(this.phone, usersUserProperties.phone) &&
        Objects.equals(this.physicalDeliveryOfficeName, usersUserProperties.physicalDeliveryOfficeName) &&
        Objects.equals(this.postOfficeBox, usersUserProperties.postOfficeBox) &&
        Objects.equals(this.postcode, usersUserProperties.postcode) &&
        Objects.equals(this.preferredDeliveryMethod, usersUserProperties.preferredDeliveryMethod) &&
        Objects.equals(this.preferredLanguage, usersUserProperties.preferredLanguage) &&
        Objects.equals(this.primaryGroup, usersUserProperties.primaryGroup) &&
        Objects.equals(this.profilepath, usersUserProperties.profilepath) &&
        Objects.equals(this.pwdChangeNextLogin, usersUserProperties.pwdChangeNextLogin) &&
        Objects.equals(this.roomNumber, usersUserProperties.roomNumber) &&
        Objects.equals(this.sambaLogonHours, usersUserProperties.sambaLogonHours) &&
        Objects.equals(this.sambaPrivileges, usersUserProperties.sambaPrivileges) &&
        Objects.equals(this.sambaRID, usersUserProperties.sambaRID) &&
        Objects.equals(this.sambaUserWorkstations, usersUserProperties.sambaUserWorkstations) &&
        Objects.equals(this.sambahome, usersUserProperties.sambahome) &&
        Objects.equals(this.scriptpath, usersUserProperties.scriptpath) &&
        Objects.equals(this.secretary, usersUserProperties.secretary) &&
        Objects.equals(this.serviceprovider, usersUserProperties.serviceprovider) &&
        Objects.equals(this.shell, usersUserProperties.shell) &&
        Objects.equals(this.street, usersUserProperties.street) &&
        Objects.equals(this.title, usersUserProperties.title) &&
        Objects.equals(this.uidNumber, usersUserProperties.uidNumber) &&
        Objects.equals(this.umcProperty, usersUserProperties.umcProperty) &&
        Objects.equals(this.unixhome, usersUserProperties.unixhome) &&
        Objects.equals(this.unlock, usersUserProperties.unlock) &&
        Objects.equals(this.unlockTime, usersUserProperties.unlockTime) &&
        Arrays.equals(this.userCertificate, usersUserProperties.userCertificate) &&
        Objects.equals(this.userexpiry, usersUserProperties.userexpiry) &&
        Objects.equals(this.username, usersUserProperties.username)&&
        Objects.equals(this.additionalProperties, usersUserProperties.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(birthday, certificateDateNotAfter, certificateDateNotBefore, certificateIssuerCommonName, certificateIssuerCountry, certificateIssuerLocation, certificateIssuerMail, certificateIssuerOrganisation, certificateIssuerOrganisationalUnit, certificateIssuerState, certificateSerial, certificateSubjectCommonName, certificateSubjectCountry, certificateSubjectLocation, certificateSubjectMail, certificateSubjectOrganisation, certificateSubjectOrganisationalUnit, certificateSubjectState, certificateVersion, city, country, departmentNumber, description, disabled, displayName, eMail, employeeNumber, employeeType, firstname, gecos, gidNumber, groups, homePostalAddress, homeShare, homeSharePath, homeTelephoneNumber, homedrive, initials, Arrays.hashCode(jpegPhoto), lastbind, lastname, locked, lockedTime, mailAlternativeAddress, mailForwardAddress, mailForwardCopyToSelf, mailHomeServer, mailPrimaryAddress, mobileTelephoneNumber, objectFlag, organisation, overridePWHistory, overridePWLength, pagerTelephoneNumber, password, passwordexpiry, phone, physicalDeliveryOfficeName, postOfficeBox, postcode, preferredDeliveryMethod, preferredLanguage, primaryGroup, profilepath, pwdChangeNextLogin, roomNumber, sambaLogonHours, sambaPrivileges, sambaRID, sambaUserWorkstations, sambahome, scriptpath, secretary, serviceprovider, shell, street, title, uidNumber, umcProperty, unixhome, unlock, unlockTime, Arrays.hashCode(userCertificate), userexpiry, username, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersUserProperties {\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    certificateDateNotAfter: ").append(toIndentedString(certificateDateNotAfter)).append("\n");
    sb.append("    certificateDateNotBefore: ").append(toIndentedString(certificateDateNotBefore)).append("\n");
    sb.append("    certificateIssuerCommonName: ").append(toIndentedString(certificateIssuerCommonName)).append("\n");
    sb.append("    certificateIssuerCountry: ").append(toIndentedString(certificateIssuerCountry)).append("\n");
    sb.append("    certificateIssuerLocation: ").append(toIndentedString(certificateIssuerLocation)).append("\n");
    sb.append("    certificateIssuerMail: ").append(toIndentedString(certificateIssuerMail)).append("\n");
    sb.append("    certificateIssuerOrganisation: ").append(toIndentedString(certificateIssuerOrganisation)).append("\n");
    sb.append("    certificateIssuerOrganisationalUnit: ").append(toIndentedString(certificateIssuerOrganisationalUnit)).append("\n");
    sb.append("    certificateIssuerState: ").append(toIndentedString(certificateIssuerState)).append("\n");
    sb.append("    certificateSerial: ").append(toIndentedString(certificateSerial)).append("\n");
    sb.append("    certificateSubjectCommonName: ").append(toIndentedString(certificateSubjectCommonName)).append("\n");
    sb.append("    certificateSubjectCountry: ").append(toIndentedString(certificateSubjectCountry)).append("\n");
    sb.append("    certificateSubjectLocation: ").append(toIndentedString(certificateSubjectLocation)).append("\n");
    sb.append("    certificateSubjectMail: ").append(toIndentedString(certificateSubjectMail)).append("\n");
    sb.append("    certificateSubjectOrganisation: ").append(toIndentedString(certificateSubjectOrganisation)).append("\n");
    sb.append("    certificateSubjectOrganisationalUnit: ").append(toIndentedString(certificateSubjectOrganisationalUnit)).append("\n");
    sb.append("    certificateSubjectState: ").append(toIndentedString(certificateSubjectState)).append("\n");
    sb.append("    certificateVersion: ").append(toIndentedString(certificateVersion)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    departmentNumber: ").append(toIndentedString(departmentNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    eMail: ").append(toIndentedString(eMail)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    gecos: ").append(toIndentedString(gecos)).append("\n");
    sb.append("    gidNumber: ").append(toIndentedString(gidNumber)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    homePostalAddress: ").append(toIndentedString(homePostalAddress)).append("\n");
    sb.append("    homeShare: ").append(toIndentedString(homeShare)).append("\n");
    sb.append("    homeSharePath: ").append(toIndentedString(homeSharePath)).append("\n");
    sb.append("    homeTelephoneNumber: ").append(toIndentedString(homeTelephoneNumber)).append("\n");
    sb.append("    homedrive: ").append(toIndentedString(homedrive)).append("\n");
    sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
    sb.append("    jpegPhoto: ").append(toIndentedString(jpegPhoto)).append("\n");
    sb.append("    lastbind: ").append(toIndentedString(lastbind)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    lockedTime: ").append(toIndentedString(lockedTime)).append("\n");
    sb.append("    mailAlternativeAddress: ").append(toIndentedString(mailAlternativeAddress)).append("\n");
    sb.append("    mailForwardAddress: ").append(toIndentedString(mailForwardAddress)).append("\n");
    sb.append("    mailForwardCopyToSelf: ").append(toIndentedString(mailForwardCopyToSelf)).append("\n");
    sb.append("    mailHomeServer: ").append(toIndentedString(mailHomeServer)).append("\n");
    sb.append("    mailPrimaryAddress: ").append(toIndentedString(mailPrimaryAddress)).append("\n");
    sb.append("    mobileTelephoneNumber: ").append(toIndentedString(mobileTelephoneNumber)).append("\n");
    sb.append("    objectFlag: ").append(toIndentedString(objectFlag)).append("\n");
    sb.append("    organisation: ").append(toIndentedString(organisation)).append("\n");
    sb.append("    overridePWHistory: ").append(toIndentedString(overridePWHistory)).append("\n");
    sb.append("    overridePWLength: ").append(toIndentedString(overridePWLength)).append("\n");
    sb.append("    pagerTelephoneNumber: ").append(toIndentedString(pagerTelephoneNumber)).append("\n");
    sb.append("    password: ").append("*").append("\n");
    sb.append("    passwordexpiry: ").append(toIndentedString(passwordexpiry)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    physicalDeliveryOfficeName: ").append(toIndentedString(physicalDeliveryOfficeName)).append("\n");
    sb.append("    postOfficeBox: ").append(toIndentedString(postOfficeBox)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    preferredDeliveryMethod: ").append(toIndentedString(preferredDeliveryMethod)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    primaryGroup: ").append(toIndentedString(primaryGroup)).append("\n");
    sb.append("    profilepath: ").append(toIndentedString(profilepath)).append("\n");
    sb.append("    pwdChangeNextLogin: ").append(toIndentedString(pwdChangeNextLogin)).append("\n");
    sb.append("    roomNumber: ").append(toIndentedString(roomNumber)).append("\n");
    sb.append("    sambaLogonHours: ").append(toIndentedString(sambaLogonHours)).append("\n");
    sb.append("    sambaPrivileges: ").append(toIndentedString(sambaPrivileges)).append("\n");
    sb.append("    sambaRID: ").append(toIndentedString(sambaRID)).append("\n");
    sb.append("    sambaUserWorkstations: ").append(toIndentedString(sambaUserWorkstations)).append("\n");
    sb.append("    sambahome: ").append(toIndentedString(sambahome)).append("\n");
    sb.append("    scriptpath: ").append(toIndentedString(scriptpath)).append("\n");
    sb.append("    secretary: ").append(toIndentedString(secretary)).append("\n");
    sb.append("    serviceprovider: ").append(toIndentedString(serviceprovider)).append("\n");
    sb.append("    shell: ").append(toIndentedString(shell)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    uidNumber: ").append(toIndentedString(uidNumber)).append("\n");
    sb.append("    umcProperty: ").append(toIndentedString(umcProperty)).append("\n");
    sb.append("    unixhome: ").append(toIndentedString(unixhome)).append("\n");
    sb.append("    unlock: ").append(toIndentedString(unlock)).append("\n");
    sb.append("    unlockTime: ").append(toIndentedString(unlockTime)).append("\n");
    sb.append("    userCertificate: ").append(toIndentedString(userCertificate)).append("\n");
    sb.append("    userexpiry: ").append(toIndentedString(userexpiry)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("birthday");
    openapiFields.add("certificateDateNotAfter");
    openapiFields.add("certificateDateNotBefore");
    openapiFields.add("certificateIssuerCommonName");
    openapiFields.add("certificateIssuerCountry");
    openapiFields.add("certificateIssuerLocation");
    openapiFields.add("certificateIssuerMail");
    openapiFields.add("certificateIssuerOrganisation");
    openapiFields.add("certificateIssuerOrganisationalUnit");
    openapiFields.add("certificateIssuerState");
    openapiFields.add("certificateSerial");
    openapiFields.add("certificateSubjectCommonName");
    openapiFields.add("certificateSubjectCountry");
    openapiFields.add("certificateSubjectLocation");
    openapiFields.add("certificateSubjectMail");
    openapiFields.add("certificateSubjectOrganisation");
    openapiFields.add("certificateSubjectOrganisationalUnit");
    openapiFields.add("certificateSubjectState");
    openapiFields.add("certificateVersion");
    openapiFields.add("city");
    openapiFields.add("country");
    openapiFields.add("departmentNumber");
    openapiFields.add("description");
    openapiFields.add("disabled");
    openapiFields.add("displayName");
    openapiFields.add("e-mail");
    openapiFields.add("employeeNumber");
    openapiFields.add("employeeType");
    openapiFields.add("firstname");
    openapiFields.add("gecos");
    openapiFields.add("gidNumber");
    openapiFields.add("groups");
    openapiFields.add("homePostalAddress");
    openapiFields.add("homeShare");
    openapiFields.add("homeSharePath");
    openapiFields.add("homeTelephoneNumber");
    openapiFields.add("homedrive");
    openapiFields.add("initials");
    openapiFields.add("jpegPhoto");
    openapiFields.add("lastbind");
    openapiFields.add("lastname");
    openapiFields.add("locked");
    openapiFields.add("lockedTime");
    openapiFields.add("mailAlternativeAddress");
    openapiFields.add("mailForwardAddress");
    openapiFields.add("mailForwardCopyToSelf");
    openapiFields.add("mailHomeServer");
    openapiFields.add("mailPrimaryAddress");
    openapiFields.add("mobileTelephoneNumber");
    openapiFields.add("objectFlag");
    openapiFields.add("organisation");
    openapiFields.add("overridePWHistory");
    openapiFields.add("overridePWLength");
    openapiFields.add("pagerTelephoneNumber");
    openapiFields.add("password");
    openapiFields.add("passwordexpiry");
    openapiFields.add("phone");
    openapiFields.add("physicalDeliveryOfficeName");
    openapiFields.add("postOfficeBox");
    openapiFields.add("postcode");
    openapiFields.add("preferredDeliveryMethod");
    openapiFields.add("preferredLanguage");
    openapiFields.add("primaryGroup");
    openapiFields.add("profilepath");
    openapiFields.add("pwdChangeNextLogin");
    openapiFields.add("roomNumber");
    openapiFields.add("sambaLogonHours");
    openapiFields.add("sambaPrivileges");
    openapiFields.add("sambaRID");
    openapiFields.add("sambaUserWorkstations");
    openapiFields.add("sambahome");
    openapiFields.add("scriptpath");
    openapiFields.add("secretary");
    openapiFields.add("serviceprovider");
    openapiFields.add("shell");
    openapiFields.add("street");
    openapiFields.add("title");
    openapiFields.add("uidNumber");
    openapiFields.add("umcProperty");
    openapiFields.add("unixhome");
    openapiFields.add("unlock");
    openapiFields.add("unlockTime");
    openapiFields.add("userCertificate");
    openapiFields.add("userexpiry");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UsersUserProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UsersUserProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersUserProperties is not found in the empty JSON string", UsersUserProperties.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("certificateIssuerCommonName") != null && !jsonObj.get("certificateIssuerCommonName").isJsonNull()) && !jsonObj.get("certificateIssuerCommonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerCommonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerCommonName").toString()));
      }
      if ((jsonObj.get("certificateIssuerCountry") != null && !jsonObj.get("certificateIssuerCountry").isJsonNull()) && !jsonObj.get("certificateIssuerCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerCountry").toString()));
      }
      if ((jsonObj.get("certificateIssuerLocation") != null && !jsonObj.get("certificateIssuerLocation").isJsonNull()) && !jsonObj.get("certificateIssuerLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerLocation").toString()));
      }
      if ((jsonObj.get("certificateIssuerMail") != null && !jsonObj.get("certificateIssuerMail").isJsonNull()) && !jsonObj.get("certificateIssuerMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerMail").toString()));
      }
      if ((jsonObj.get("certificateIssuerOrganisation") != null && !jsonObj.get("certificateIssuerOrganisation").isJsonNull()) && !jsonObj.get("certificateIssuerOrganisation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerOrganisation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerOrganisation").toString()));
      }
      if ((jsonObj.get("certificateIssuerOrganisationalUnit") != null && !jsonObj.get("certificateIssuerOrganisationalUnit").isJsonNull()) && !jsonObj.get("certificateIssuerOrganisationalUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerOrganisationalUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerOrganisationalUnit").toString()));
      }
      if ((jsonObj.get("certificateIssuerState") != null && !jsonObj.get("certificateIssuerState").isJsonNull()) && !jsonObj.get("certificateIssuerState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateIssuerState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateIssuerState").toString()));
      }
      if ((jsonObj.get("certificateSerial") != null && !jsonObj.get("certificateSerial").isJsonNull()) && !jsonObj.get("certificateSerial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSerial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSerial").toString()));
      }
      if ((jsonObj.get("certificateSubjectCommonName") != null && !jsonObj.get("certificateSubjectCommonName").isJsonNull()) && !jsonObj.get("certificateSubjectCommonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectCommonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectCommonName").toString()));
      }
      if ((jsonObj.get("certificateSubjectCountry") != null && !jsonObj.get("certificateSubjectCountry").isJsonNull()) && !jsonObj.get("certificateSubjectCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectCountry").toString()));
      }
      if ((jsonObj.get("certificateSubjectLocation") != null && !jsonObj.get("certificateSubjectLocation").isJsonNull()) && !jsonObj.get("certificateSubjectLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectLocation").toString()));
      }
      if ((jsonObj.get("certificateSubjectMail") != null && !jsonObj.get("certificateSubjectMail").isJsonNull()) && !jsonObj.get("certificateSubjectMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectMail").toString()));
      }
      if ((jsonObj.get("certificateSubjectOrganisation") != null && !jsonObj.get("certificateSubjectOrganisation").isJsonNull()) && !jsonObj.get("certificateSubjectOrganisation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectOrganisation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectOrganisation").toString()));
      }
      if ((jsonObj.get("certificateSubjectOrganisationalUnit") != null && !jsonObj.get("certificateSubjectOrganisationalUnit").isJsonNull()) && !jsonObj.get("certificateSubjectOrganisationalUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectOrganisationalUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectOrganisationalUnit").toString()));
      }
      if ((jsonObj.get("certificateSubjectState") != null && !jsonObj.get("certificateSubjectState").isJsonNull()) && !jsonObj.get("certificateSubjectState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateSubjectState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateSubjectState").toString()));
      }
      if ((jsonObj.get("certificateVersion") != null && !jsonObj.get("certificateVersion").isJsonNull()) && !jsonObj.get("certificateVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateVersion").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("departmentNumber") != null && !jsonObj.get("departmentNumber").isJsonNull() && !jsonObj.get("departmentNumber").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentNumber` to be an array in the JSON string but got `%s`", jsonObj.get("departmentNumber").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("e-mail") != null && !jsonObj.get("e-mail").isJsonNull() && !jsonObj.get("e-mail").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `e-mail` to be an array in the JSON string but got `%s`", jsonObj.get("e-mail").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("employeeType") != null && !jsonObj.get("employeeType").isJsonNull()) && !jsonObj.get("employeeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeType").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("gecos") != null && !jsonObj.get("gecos").isJsonNull()) && !jsonObj.get("gecos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gecos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gecos").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull() && !jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("homePostalAddress") != null && !jsonObj.get("homePostalAddress").isJsonNull() && !jsonObj.get("homePostalAddress").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePostalAddress` to be an array in the JSON string but got `%s`", jsonObj.get("homePostalAddress").toString()));
      }
      if ((jsonObj.get("homeShare") != null && !jsonObj.get("homeShare").isJsonNull()) && !jsonObj.get("homeShare").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeShare` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeShare").toString()));
      }
      if ((jsonObj.get("homeSharePath") != null && !jsonObj.get("homeSharePath").isJsonNull()) && !jsonObj.get("homeSharePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeSharePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeSharePath").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("homeTelephoneNumber") != null && !jsonObj.get("homeTelephoneNumber").isJsonNull() && !jsonObj.get("homeTelephoneNumber").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeTelephoneNumber` to be an array in the JSON string but got `%s`", jsonObj.get("homeTelephoneNumber").toString()));
      }
      if ((jsonObj.get("homedrive") != null && !jsonObj.get("homedrive").isJsonNull()) && !jsonObj.get("homedrive").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homedrive` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homedrive").toString()));
      }
      if ((jsonObj.get("initials") != null && !jsonObj.get("initials").isJsonNull()) && !jsonObj.get("initials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initials").toString()));
      }
      if ((jsonObj.get("lastbind") != null && !jsonObj.get("lastbind").isJsonNull()) && !jsonObj.get("lastbind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastbind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastbind").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("lockedTime") != null && !jsonObj.get("lockedTime").isJsonNull()) && !jsonObj.get("lockedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lockedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lockedTime").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mailAlternativeAddress") != null && !jsonObj.get("mailAlternativeAddress").isJsonNull() && !jsonObj.get("mailAlternativeAddress").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailAlternativeAddress` to be an array in the JSON string but got `%s`", jsonObj.get("mailAlternativeAddress").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mailForwardAddress") != null && !jsonObj.get("mailForwardAddress").isJsonNull() && !jsonObj.get("mailForwardAddress").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailForwardAddress` to be an array in the JSON string but got `%s`", jsonObj.get("mailForwardAddress").toString()));
      }
      if ((jsonObj.get("mailForwardCopyToSelf") != null && !jsonObj.get("mailForwardCopyToSelf").isJsonNull()) && !jsonObj.get("mailForwardCopyToSelf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailForwardCopyToSelf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailForwardCopyToSelf").toString()));
      }
      if ((jsonObj.get("mailHomeServer") != null && !jsonObj.get("mailHomeServer").isJsonNull()) && !jsonObj.get("mailHomeServer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailHomeServer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailHomeServer").toString()));
      }
      if ((jsonObj.get("mailPrimaryAddress") != null && !jsonObj.get("mailPrimaryAddress").isJsonNull()) && !jsonObj.get("mailPrimaryAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailPrimaryAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailPrimaryAddress").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mobileTelephoneNumber") != null && !jsonObj.get("mobileTelephoneNumber").isJsonNull() && !jsonObj.get("mobileTelephoneNumber").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileTelephoneNumber` to be an array in the JSON string but got `%s`", jsonObj.get("mobileTelephoneNumber").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("objectFlag") != null && !jsonObj.get("objectFlag").isJsonNull() && !jsonObj.get("objectFlag").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `objectFlag` to be an array in the JSON string but got `%s`", jsonObj.get("objectFlag").toString()));
      }
      if ((jsonObj.get("organisation") != null && !jsonObj.get("organisation").isJsonNull()) && !jsonObj.get("organisation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisation").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pagerTelephoneNumber") != null && !jsonObj.get("pagerTelephoneNumber").isJsonNull() && !jsonObj.get("pagerTelephoneNumber").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pagerTelephoneNumber` to be an array in the JSON string but got `%s`", jsonObj.get("pagerTelephoneNumber").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull() && !jsonObj.get("phone").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be an array in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("physicalDeliveryOfficeName") != null && !jsonObj.get("physicalDeliveryOfficeName").isJsonNull()) && !jsonObj.get("physicalDeliveryOfficeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `physicalDeliveryOfficeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("physicalDeliveryOfficeName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("postOfficeBox") != null && !jsonObj.get("postOfficeBox").isJsonNull() && !jsonObj.get("postOfficeBox").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `postOfficeBox` to be an array in the JSON string but got `%s`", jsonObj.get("postOfficeBox").toString()));
      }
      if ((jsonObj.get("postcode") != null && !jsonObj.get("postcode").isJsonNull()) && !jsonObj.get("postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcode").toString()));
      }
      if ((jsonObj.get("preferredDeliveryMethod") != null && !jsonObj.get("preferredDeliveryMethod").isJsonNull()) && !jsonObj.get("preferredDeliveryMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredDeliveryMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredDeliveryMethod").toString()));
      }
      if ((jsonObj.get("preferredLanguage") != null && !jsonObj.get("preferredLanguage").isJsonNull()) && !jsonObj.get("preferredLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredLanguage").toString()));
      }
      if ((jsonObj.get("primaryGroup") != null && !jsonObj.get("primaryGroup").isJsonNull()) && !jsonObj.get("primaryGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryGroup").toString()));
      }
      if ((jsonObj.get("profilepath") != null && !jsonObj.get("profilepath").isJsonNull()) && !jsonObj.get("profilepath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profilepath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profilepath").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("roomNumber") != null && !jsonObj.get("roomNumber").isJsonNull() && !jsonObj.get("roomNumber").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `roomNumber` to be an array in the JSON string but got `%s`", jsonObj.get("roomNumber").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sambaLogonHours") != null && !jsonObj.get("sambaLogonHours").isJsonNull() && !jsonObj.get("sambaLogonHours").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sambaLogonHours` to be an array in the JSON string but got `%s`", jsonObj.get("sambaLogonHours").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sambaPrivileges") != null && !jsonObj.get("sambaPrivileges").isJsonNull() && !jsonObj.get("sambaPrivileges").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sambaPrivileges` to be an array in the JSON string but got `%s`", jsonObj.get("sambaPrivileges").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sambaUserWorkstations") != null && !jsonObj.get("sambaUserWorkstations").isJsonNull() && !jsonObj.get("sambaUserWorkstations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sambaUserWorkstations` to be an array in the JSON string but got `%s`", jsonObj.get("sambaUserWorkstations").toString()));
      }
      if ((jsonObj.get("sambahome") != null && !jsonObj.get("sambahome").isJsonNull()) && !jsonObj.get("sambahome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sambahome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sambahome").toString()));
      }
      if ((jsonObj.get("scriptpath") != null && !jsonObj.get("scriptpath").isJsonNull()) && !jsonObj.get("scriptpath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scriptpath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scriptpath").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("secretary") != null && !jsonObj.get("secretary").isJsonNull() && !jsonObj.get("secretary").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `secretary` to be an array in the JSON string but got `%s`", jsonObj.get("secretary").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("serviceprovider") != null && !jsonObj.get("serviceprovider").isJsonNull() && !jsonObj.get("serviceprovider").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceprovider` to be an array in the JSON string but got `%s`", jsonObj.get("serviceprovider").toString()));
      }
      if ((jsonObj.get("shell") != null && !jsonObj.get("shell").isJsonNull()) && !jsonObj.get("shell").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shell` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shell").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("unixhome") != null && !jsonObj.get("unixhome").isJsonNull()) && !jsonObj.get("unixhome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unixhome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unixhome").toString()));
      }
      if ((jsonObj.get("unlockTime") != null && !jsonObj.get("unlockTime").isJsonNull()) && !jsonObj.get("unlockTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unlockTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unlockTime").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersUserProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersUserProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersUserProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersUserProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersUserProperties>() {
           @Override
           public void write(JsonWriter out, UsersUserProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersUserProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             UsersUserProperties instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UsersUserProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UsersUserProperties
   * @throws IOException if the JSON string is invalid with respect to UsersUserProperties
   */
  public static UsersUserProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersUserProperties.class);
  }

  /**
   * Convert an instance of UsersUserProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

