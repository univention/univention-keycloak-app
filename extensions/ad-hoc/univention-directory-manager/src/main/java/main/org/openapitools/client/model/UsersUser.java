/*
 * Univention Directory Manager REST interface
 * Schema definition for the objects in the Univention Directory Manager REST interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.UsersUserOptions;
import org.openapitools.client.model.UsersUserPolicies;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UsersUser
 */
@JsonPropertyOrder({
  UsersUser.JSON_PROPERTY_DN,
  UsersUser.JSON_PROPERTY_UUID,
  UsersUser.JSON_PROPERTY_OBJECT_TYPE,
  UsersUser.JSON_PROPERTY_LINKS,
  UsersUser.JSON_PROPERTY_EMBEDDED,
  UsersUser.JSON_PROPERTY_POSITION,
  UsersUser.JSON_PROPERTY_PROPERTIES,
  UsersUser.JSON_PROPERTY_URI,
  UsersUser.JSON_PROPERTY_OPTIONS,
  UsersUser.JSON_PROPERTY_POLICIES
})
@JsonTypeName("users-user")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-25T17:17:28.719252+02:00[Europe/Berlin]")
public class UsersUser {
  public static final String JSON_PROPERTY_DN = "dn";
  private String dn;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_OBJECT_TYPE = "objectType";
  private String objectType;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private Map<String, Object> links = null;

  public static final String JSON_PROPERTY_EMBEDDED = "_embedded";
  private Map<String, Object> embedded = null;

  public static final String JSON_PROPERTY_POSITION = "position";
  private String position;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, Object> properties = null;

  public static final String JSON_PROPERTY_URI = "uri";
  private URI uri;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private UsersUserOptions options;

  public static final String JSON_PROPERTY_POLICIES = "policies";
  private UsersUserPolicies policies;


   /**
   * LDAP DN (Distinguished Name)
   * @return dn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dc=example,dc=net", value = "LDAP DN (Distinguished Name)")
  @JsonProperty(JSON_PROPERTY_DN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDn() {
    return dn;
  }




  public UsersUser uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * LDAP Entry-UUID
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LDAP Entry-UUID")
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


   /**
   * UDM Object-Type
   * @return objectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "users/user", value = "UDM Object-Type")
  @JsonProperty(JSON_PROPERTY_OBJECT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectType() {
    return objectType;
  }




   /**
   * Hypertext Application Language (HAL) links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hypertext Application Language (HAL) links")
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getLinks() {
    return links;
  }




   /**
   * Hypertext Application Language (HAL) embedded resources
   * @return embedded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hypertext Application Language (HAL) embedded resources")
  @JsonProperty(JSON_PROPERTY_EMBEDDED)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getEmbedded() {
    return embedded;
  }




  public UsersUser position(String position) {
    
    this.position = position;
    return this;
  }

   /**
   * DN of LDAP node below which the object is located. Changing this causes a move of the object. When chaning no other changes are applied.
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cn=position,dc=example,dc=net", value = "DN of LDAP node below which the object is located. Changing this causes a move of the object. When chaning no other changes are applied.")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(String position) {
    this.position = position;
  }


  public UsersUser properties(Map<String, Object> properties) {
    
    this.properties = properties;
    return this;
  }

  public UsersUser putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, Object>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }


  public UsersUser uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://10.200.69.10/univention/udm/users/user/uid=foo,dc=example,dc=net", value = "")
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public UsersUser options(UsersUserOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsersUserOptions getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(UsersUserOptions options) {
    this.options = options;
  }


  public UsersUser policies(UsersUserPolicies policies) {
    
    this.policies = policies;
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsersUserPolicies getPolicies() {
    return policies;
  }


  @JsonProperty(JSON_PROPERTY_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicies(UsersUserPolicies policies) {
    this.policies = policies;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersUser usersUser = (UsersUser) o;
    return Objects.equals(this.dn, usersUser.dn) &&
        Objects.equals(this.uuid, usersUser.uuid) &&
        Objects.equals(this.objectType, usersUser.objectType) &&
        Objects.equals(this.links, usersUser.links) &&
        Objects.equals(this.embedded, usersUser.embedded) &&
        Objects.equals(this.position, usersUser.position) &&
        Objects.equals(this.properties, usersUser.properties) &&
        Objects.equals(this.uri, usersUser.uri) &&
        Objects.equals(this.options, usersUser.options) &&
        Objects.equals(this.policies, usersUser.policies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dn, uuid, objectType, links, embedded, position, properties, uri, options, policies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersUser {\n");
    sb.append("    dn: ").append(toIndentedString(dn)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

